<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>烂杯的博客</title>
    <link>https://cgcel.github.io/</link>
    <description>Recent content on 烂杯的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Sun, 16 Oct 2022 00:16:55 +0800</lastBuildDate>
    
        <atom:link href="https://cgcel.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>V2RayN局域网共享</title>
        <link>https://cgcel.github.io/posts/2020/02/06/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/</link>
        <pubDate>Thu, 06 Feb 2020 14:28:09 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2020/02/06/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2020/02/06/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/ -&lt;h2 id=&#34;开篇&#34;&gt;开篇&lt;/h2&gt;
&lt;p&gt;最近肺炎爆发, 虽然上班了但是因为公司要节省口罩, 所以大部分时间都在家里待岗, 正好电脑上已经不再用 ss, ssr 也准备不用了 (越来越不稳定了) 于是尝试了一下共享 V2Ray 的局域网连接, 很快就成功了, 闲得无事写篇博客记录一下.&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;电脑1台&lt;/li&gt;
&lt;li&gt;安装好 V2RayN&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;详细步骤&#34;&gt;详细步骤&lt;/h2&gt;
&lt;h3 id=&#34;设置v2rayn&#34;&gt;设置V2RayN&lt;/h3&gt;
&lt;p&gt;因为现在懒得自己弄, 所以随便找个机场, 拿到订阅链接后在 V2RayN 中更新节点并在设置中允许局域网连接, 同时留意一下本地监听端口, 如图显示是 10808 端口.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-02-06-12-28-11.png&#34; alt=&#34;图1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;打开移动热点&#34;&gt;打开移动热点&lt;/h3&gt;
&lt;p&gt;以 win10 系统为例, 在设置中打开移动热点:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-02-06-12-08-55.png&#34; alt=&#34;图2&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后在网络适配器选项中, 查看已经开启的热点并获取ip地址:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-02-06-12-11-33.png&#34; alt=&#34;图3&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;连接热点&#34;&gt;连接热点&lt;/h3&gt;
&lt;p&gt;首先在设置中查看已开启的代理的手动设置项, 可以看到端口为 10809.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-02-06-12-08-20.png&#34; alt=&#34;图4&#34;&gt;&lt;/p&gt;
&lt;p&gt;在手机上连接热点, 并手动设置代理服务器 IP 以及端口, 从上面步骤可知分别为: 192.168.137.1 和 10809.&lt;/p&gt;
&lt;p&gt;到这里就大功告成了, 其他类似的共享到局域网的热点都是差不多的步骤, ssr 的设置也一样.&lt;/p&gt;
- https://cgcel.github.io/posts/2020/02/06/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/v2rayn%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Arduino的主从机双向通信</title>
        <link>https://cgcel.github.io/posts/2019/12/03/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/</link>
        <pubDate>Tue, 03 Dec 2019 01:19:09 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2019/12/03/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2019/12/03/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/ -&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;网上有不少关于 Arduino 串口通信的教程和示例, 但大多是单向通信的或者是照搬 Arduino 官方示例的. 正好我的自动投食机第二版考虑加物联网功能, 需要对两块板子建立串口通信, 于是整理了网上例子和实践写一篇记录.&lt;/p&gt;
&lt;h2 id=&#34;硬件准备&#34;&gt;硬件准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Arduino UNO R1&lt;/li&gt;
&lt;li&gt;Arduino MEGA 2560&lt;/li&gt;
&lt;li&gt;PC一台&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;库文件&#34;&gt;库文件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.arduino.cc/en/Reference/SoftwareSerial&#34;&gt;SoftwareSerial.h&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;代码部分&#34;&gt;代码部分&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;SoftwareSerial.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SoftwareSerial &lt;span style=&#34;color:#008b45&#34;&gt;mySerial&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;11&lt;/span&gt;); &lt;span style=&#34;color:#228b22&#34;&gt;//Rx, Tx
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String data = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#228b22&#34;&gt;//定义字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;setup&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Serial.begin(&lt;span style=&#34;color:#b452cd&#34;&gt;9600&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mySerial.begin(&lt;span style=&#34;color:#b452cd&#34;&gt;4800&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;loop&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;//软串口接收到字符串时, 在串口监视器打印
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (mySerial.available()) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data += &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;(mySerial.read());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        delay(&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (data.length() &amp;gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Serial.print(data);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;//硬串口接收到字符串时,通过软串口将信息发送给另一块板子
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (Serial.available()) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data += &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;char&lt;/span&gt;(Serial.read());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        delay(&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (data.length() &amp;gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        mySerial.print(data);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实际编译测试时, 需要留意一些硬件问题, 避免出现僵局:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;UNO 不能使用 pin2, pin3 作为软串口的输入输出口, 否则无法接受信息, 原因待查;&lt;/li&gt;
&lt;li&gt;硬串口与软串口的波特率尽量设置成不同的, 以免打印信息混淆;&lt;/li&gt;
&lt;li&gt;软串口波特率不宜过高, 容易造成数据乱码, 原因待查;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;这一个小小功能在网上还真的是挺难找的, 相似的例程也不会说明需要注意哪些问题, 就是测试成功了就发上来的那种感觉, 不过硬件开发就是要自己结合实际测试才能积累到经验, 顺便记录下来也是一个不错的学习过程.&lt;/p&gt;
- https://cgcel.github.io/posts/2019/12/03/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/arduino%E7%9A%84%E4%B8%BB%E4%BB%8E%E6%9C%BA%E5%8F%8C%E5%90%91%E9%80%9A%E4%BF%A1/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>换个主题</title>
        <link>https://cgcel.github.io/posts/2019/12/01/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/</link>
        <pubDate>Sun, 01 Dec 2019 23:50:09 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2019/12/01/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2019/12/01/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/ -&lt;h2 id=&#34;这是标题&#34;&gt;这是标题&lt;/h2&gt;
&lt;p&gt;好久没弄博客, 正好换电脑心血来潮重新配一下, 感觉新主题还挺不错的, 近期更新一下文章吧, 大概:)&lt;/p&gt;
- https://cgcel.github.io/posts/2019/12/01/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>元旦年度总结</title>
        <link>https://cgcel.github.io/posts/2019/01/01/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link>
        <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2019/01/01/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2019/01/01/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/ -&lt;h1 id=&#34;元旦快乐&#34;&gt;元旦快乐&lt;/h1&gt;
&lt;p&gt;2018 过去了，发生了不少事情，总体还算顺利(发一篇博客看看视觉效果如何)。&lt;/p&gt;
&lt;h2 id=&#34;壹&#34;&gt;壹&lt;/h2&gt;
&lt;p&gt;完成了大大小小的课设，自学了挺多东西吧，参加了实习，找到了工作。&lt;/p&gt;
&lt;h2 id=&#34;贰&#34;&gt;贰&lt;/h2&gt;
&lt;p&gt;感觉跟同学也慢慢打成一片了，可能是因为少玩 Ingress 了，今年北蓝年终聚餐也没有去，重生之后借着双倍11级然后就没怎么玩游戏了，大四还是挺忙的，比前三年要更有压力，想的东西更多。&lt;/p&gt;
&lt;h2 id=&#34;叁&#34;&gt;叁&lt;/h2&gt;
&lt;p&gt;又是一个忙碌的元旦(大家都开始做课设不过我们组已经快完成了)然后我自己也效率低下地继续着我的毕设，女朋友也有事要忙，所以就当做是普通的一天好了。&lt;/p&gt;
&lt;h2 id=&#34;肆&#34;&gt;肆&lt;/h2&gt;
&lt;p&gt;元旦的计划的话，应该就是继续宅在宿舍做毕设，查资料，玩玩手机吧，天气冷我也没有外出的欲望，最多晚上出去吃顿火锅？&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;祝元旦快乐，新的一年希望更精彩，偷一张 Bing 壁纸。
&lt;img src=&#34;20190101.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
- https://cgcel.github.io/posts/2019/01/01/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/%E5%85%83%E6%97%A6%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>基于Arduino的自平衡车的调试总结</title>
        <link>https://cgcel.github.io/posts/2018/12/21/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/</link>
        <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2018/12/21/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2018/12/21/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/ -&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;翻阅网上的平衡车资料，大概有两个大方向，分别为卡尔曼滤波型和直接的 PID 调节型，前期我参照了卡尔曼滤波型平衡小车的代码，效果不是很好，小车最后连直立也无法做到，也可能是我的调试方法不对，再加上卡尔曼滤波型的代码相对比较复杂，于是我全部推倒重建，尝试后者。&lt;/p&gt;
&lt;p&gt;模块清单:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;12V 可充电锂电池&lt;/li&gt;
&lt;li&gt;Arduino UNO R3&lt;/li&gt;
&lt;li&gt;L298N 电机驱动模块&lt;/li&gt;
&lt;li&gt;MPU6050 模块&lt;/li&gt;
&lt;li&gt;小车底座&lt;/li&gt;
&lt;li&gt;杜邦线若干&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;过程&#34;&gt;过程&lt;/h2&gt;
&lt;p&gt;相较于卡尔曼滤波型，PID 直接调节型对初次做平衡车的新手比较友好，Youtube 上教程很多，同时也有 PID 参数整定的视频教程。&lt;/p&gt;
&lt;h3 id=&#34;组装&#34;&gt;组装&lt;/h3&gt;
&lt;p&gt;首先是组装过程，相对比较简单，觉得不放心的可以直接参照视频教程来做&lt;a href=&#34;https://www.youtube.com/watch?v=yL43DSVdEEQ&amp;amp;t&#34;&gt;视频&lt;/a&gt;，整个系统接线图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%E6%8E%A5%E7%BA%BF%E5%9B%BE.png&#34; alt=&#34;接线图&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;调试&#34;&gt;调试&lt;/h3&gt;
&lt;p&gt;进入重要环节，首先我们将代码烧进 Arduino，然后开机试运行，如果不成功，请返回上一步检查。运行成功后，我们首先需要校正 mpu6050，参照&lt;a href=&#34;https://www.youtube.com/watch?v=ce3eA8nzInE&#34;&gt;视频&lt;/a&gt;，我将mpu6050校正了3遍，结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;mpu6050%E6%A0%A1%E6%AD%A3_1.png&#34; alt=&#34;mpu6050校正_1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;mpu6050%E6%A0%A1%E6%AD%A3_2.png&#34; alt=&#34;mpu6050校正_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;mpu6050%E6%A0%A1%E6%AD%A3_3.png&#34; alt=&#34;mpu6050校正_3&#34;&gt;&lt;/p&gt;
&lt;p&gt;对应修改代码参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpu.initialize(); &lt;span style=&#34;color:#228b22&#34;&gt;//初始化MPU6050
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;devStatus = mpu.dmpInitialize();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;// supply your own gyro offsets here, scaled for min sensitivity
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;// 校正mpu6050模块, 参考https://www.youtube.com/watch?v=ce3eA8nzInE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;mpu.setXGyroOffset(&lt;span style=&#34;color:#b452cd&#34;&gt;165&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpu.setYGyroOffset(-&lt;span style=&#34;color:#b452cd&#34;&gt;14&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpu.setZGyroOffset(&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpu.setZAccelOffset(&lt;span style=&#34;color:#b452cd&#34;&gt;528&lt;/span&gt;); &lt;span style=&#34;color:#228b22&#34;&gt;// 1688 factory default for my test chip
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;值得一提的是，这一段代码是直接照搬 mpu6050 库的示例代码的，就连备注部分都是一样的。&lt;/p&gt;
&lt;p&gt;校正完毕后，我们需要调节小车的机械中值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;double&lt;/span&gt; originalSetpoint = &lt;span style=&#34;color:#b452cd&#34;&gt;183&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;//173, 调节小车的稳定中值, 180为默认值, 根据小车实际情况调试
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;到现在，小车已经能够正常做出反应，我们的调试工作准备开始，对小车进行 PID 参数整定。
参照&lt;a href=&#34;https://www.youtube.com/watch?v=uyHdyF0_BFo&#34;&gt;视频&lt;/a&gt;，我们可以大概总结为以下流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调节 &lt;code&gt;Kp&lt;/code&gt; 值，按照从小到大的方向调试，直到小车调节反应过度（低频抖动）后再取一个比较理想的较小值&lt;/li&gt;
&lt;li&gt;调节 &lt;code&gt;Kd&lt;/code&gt; 值，为了减小抖动，我们需要 PD 控制，按照从小到大的方向调试，直到小车出现高频抖动后再取一个比较理想的较小值，此时小车已经能够直立一段时间&lt;/li&gt;
&lt;li&gt;调节 &lt;code&gt;Ki&lt;/code&gt; 值，同时 &lt;code&gt;Kp、Kd&lt;/code&gt; 值也可以进行微调，直到最后小车能够平稳直立&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;贴上调试参数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;P&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;I&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;D&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;30&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0(反应较慢)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;50&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;60&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;100&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0(低频抖动)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2(高频抖动)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.2(能直立但有抖动)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.8(能直立但没上一组平稳)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;120&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;100&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;65&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1(平稳直立但移动距离比较大)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;68&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1(平稳直立)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;68&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;50&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;68&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;100&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1(太大)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;68&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;40&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;75&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;72&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;72&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;50&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;60&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;71&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;69&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;69&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;69&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;69&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.2(稳定直立)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;65&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.2(电池满电后稳定直立)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;将串口输出的PWM值保存并用matlab绘制曲线图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%E6%95%B0%E6%8D%AE%E6%9B%B2%E7%BA%BF_2.png&#34; alt=&#34;数据曲线_2&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;从一开始自信满满开始做这个课设到中途受挫（第一次答辩打回重做）再到后来的全部推倒重建，整个过程下来学习到了很多，特别是PID参数的整定，于是想要写一篇博客记录一下。&lt;/p&gt;
&lt;p&gt;代码已上传至&lt;a href=&#34;https://github.com/Koonchung/ArduinoBalanceCar&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;p&gt;吃水不忘挖井人，下面贴上整个制作过程中帮助比较大的前辈们的教程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://forum.arduino.cc/index.php?topic=519968.0&#34;&gt;https://forum.arduino.cc/index.php?topic=519968.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geek-workshop.com/thread-704-1-1.html&#34;&gt;https://www.geek-workshop.com/thread-704-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geek-workshop.com/forum.php?mod=viewthread&amp;amp;tid=14868&amp;amp;highlight=PID&#34;&gt;https://www.geek-workshop.com/forum.php?mod=viewthread&amp;amp;tid=14868&amp;amp;highlight=PID&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geek-workshop.com/forum.php?mod=viewthread&amp;amp;tid=23&amp;amp;highlight=PID&#34;&gt;https://www.geek-workshop.com/forum.php?mod=viewthread&amp;amp;tid=23&amp;amp;highlight=PID&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.51hei.com/bbs/dpj-47816-1.html&#34;&gt;http://www.51hei.com/bbs/dpj-47816-1.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geek-workshop.com/thread-9879-1-1.html&#34;&gt;https://www.geek-workshop.com/thread-9879-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://maker.pro/arduino/projects/build-arduino-self-balancing-robot&#34;&gt;https://maker.pro/arduino/projects/build-arduino-self-balancing-robot&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lukagabric/Franko/blob/master/Franko&#34;&gt;https://github.com/lukagabric/Franko/blob/master/Franko&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yL43DSVdEEQ&amp;amp;t&#34;&gt;https://www.youtube.com/watch?v=yL43DSVdEEQ&amp;amp;t&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ce3eA8nzInE&#34;&gt;https://www.youtube.com/watch?v=ce3eA8nzInE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uyHdyF0_BFo&#34;&gt;https://www.youtube.com/watch?v=uyHdyF0_BFo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
- https://cgcel.github.io/posts/2018/12/21/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/%E5%9F%BA%E4%BA%8Earduino%E7%9A%84%E8%87%AA%E5%B9%B3%E8%A1%A1%E8%BD%A6%E7%9A%84%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>一加6 Pixel Experience Android Pie 刷机体验</title>
        <link>https://cgcel.github.io/posts/2018/10/28/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/</link>
        <pubDate>Sun, 28 Oct 2018 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2018/10/28/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2018/10/28/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/ -&lt;h2 id=&#34;开篇&#34;&gt;开篇&lt;/h2&gt;
&lt;p&gt;前不久入了一加6, 入手第二天就升到了官方的 OxygenOS 9.0 Beta4, 吃到了官方的 pie, 体验下来, 总体感觉如下:&lt;/p&gt;
&lt;h3 id=&#34;优点&#34;&gt;优点:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;指纹支付很方便, 这在氢氧两个 ROM 均有适配&lt;/li&gt;
&lt;li&gt;类原生 UI 风格讨喜&lt;/li&gt;
&lt;li&gt;后台清除方式分两种模式可调节, 方便不同用户群体&lt;/li&gt;
&lt;li&gt;全面屏显示功能调节方便, 充分利用屏幕显示&lt;/li&gt;
&lt;li&gt;Dash 闪充充电效率很高&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;缺点&#34;&gt;缺点:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;系统功能未完善, 比如岛 Island (炼妖壶)等相关 app 无法创建工作模式&lt;/li&gt;
&lt;li&gt;动画粗糙, 比如切换最近任务栏时可以明显看见缩略图由原生的棱角突变为一加的圆角卡片&lt;/li&gt;
&lt;li&gt;后台限制管理太分散: 一加将自家的后台省电与原生的 AI 省电混合使用, 用户难以分清楚两者相关作用&lt;/li&gt;
&lt;li&gt;室内定位体验差, 一加的定位一直以来都受到诟病 (比如 ingress 室内一直在雪花)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总体来说一加的产品在国内算是非常不错的安卓旗舰机了, 今天无聊打开 xda 逛了一下一加6论坛, 发现 Pixel Experience 适配了一加6, 于是在一番准备后, 我开始了刷机.&lt;/p&gt;
&lt;h2 id=&#34;前期准备&#34;&gt;前期准备&lt;/h2&gt;
&lt;p&gt;这是我第三次刷 AB 分区的手机, 上一次操作是用米3和Pixel 2 XL的时候, 因此要做足准备, 不然刷成砖岂不是&amp;hellip;😂&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查询相关评测&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这一步其实是必不可少的, 任何 ROM 都会有或多或少的 bug, 要确认该 ROM 在本机上能正常使用我们才能放心去刷, 另外我习惯找比较出名的第三方 ROM, 一是有口碑有质量保证, 二是刷的人多可以借鉴他们的方法和经验, 而 Pixel Experience 是近来大家讨论比较多的 ROM. 我分别在 &lt;a href=&#34;https://forum.xda-developers.com/oneplus-6/development/rom-pixel-experience-t3856643&#34;&gt;xda&lt;/a&gt; 和 &lt;a href=&#34;https://www.youtube.com/watch?v=_g36I37rP5o&#34;&gt;youtube&lt;/a&gt; 上查阅, 观看了相关信息, 总结下来刷机顺序如下:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install blue_spark twrp.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clear system, cache, dalvik cache&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flash rom and then twrp. Use the latest blu spark recovery.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let the rom boot first. First boot might take 10-15 mins cause.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Boot into recovery and then flash magisk if you want to root, then boot into system.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;环境及刷机包准备&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.oneplusbbs.com/thread-4161221-1-1.html&#34;&gt;解锁bootloader教程&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;adb (不懂的请自行解决)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://download.pixelexperience.org/enchilada/&#34;&gt;ROM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/redirect?q=https%3A%2F%2Fforum.xda-developers.com%2Fdevdb%2Fproject%2F%3Fid%3D27466%23downloads&amp;amp;v=_g36I37rP5o&amp;amp;redir_token=jd_HaWv_zFe6Fn8LNk9UaJxf38d8MTU0MDgyMDQzNEAxNTQwNzM0MDM0&amp;amp;event=video_description&#34;&gt;TWRP(img&amp;amp;zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Magisk (自选)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;开刷&#34;&gt;开刷&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从开机状态开始操作&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb reboot bootloader
$ fastboot boot name_of_twrp.img
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;如顺利, 将进入twrp.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;刷入&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;wipe → clear system, cache, dalvik cache&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;install → name_of_rom.zip&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;install → name_of_twrp.zip&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;install → magisk.zip →reboot system&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初始化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;经过以上流程, 此ROM就算刷完了, ok可以开始体验啦:)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用感受&#34;&gt;使用感受&lt;/h2&gt;
&lt;p&gt;系统保留了一些一加的功能:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-10-28-01.jpg&#34; alt=&#34;图1&#34;&gt;&lt;/p&gt;
&lt;p&gt;一些截图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-10-28-02.jpg&#34; alt=&#34;图2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-10-28-03.jpg&#34; alt=&#34;图3&#34;&gt;&lt;/p&gt;
&lt;p&gt;闪充依然见效:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-10-28-04.jpg&#34; alt=&#34;图4&#34;&gt;&lt;/p&gt;
&lt;p&gt;PS: ingress室内秒定位, 嗯真香&amp;hellip;&lt;/p&gt;
&lt;p&gt;以上.&lt;/p&gt;
- https://cgcel.github.io/posts/2018/10/28/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/%E4%B8%80%E5%8A%A06-pixel-experience-android-pie-%E5%88%B7%E6%9C%BA%E4%BD%93%E9%AA%8C/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Pixel 2XL root方案记录</title>
        <link>https://cgcel.github.io/posts/2018/09/09/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2018/09/09/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2018/09/09/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/ -&lt;h2 id=&#34;开篇&#34;&gt;开篇&lt;/h2&gt;
&lt;p&gt;回顾我的刷机历程, 每次都是有了想法之后就行动起来了, 经历的是一次又一次的真香警告. 而本次 root 的想法的起因是黑域越来越难用, 让我想用回绿守, 本想着等 9.1 出来之后再 root, 但是每次我都会等不及&amp;hellip; 然后果不其然的踩坑了.&lt;/p&gt;
&lt;h2 id=&#34;刷机环境以及刷机包准备&#34;&gt;刷机环境以及刷机包准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio/run/oem-usb&#34;&gt;USB驱动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio/releases/platform-tools&#34;&gt;adb环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.twrp.me/taimen/&#34;&gt;TWRP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445&#34;&gt;Magisk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中, twrp 较新版本刷入之后有 bug, 上 youtube 看过教程后, 决定采用 &lt;code&gt;twrp3.2.1.2&lt;/code&gt;, 下载时需要下载&lt;code&gt;.img&lt;/code&gt;以及&lt;code&gt;.zip&lt;/code&gt;文件.&lt;/p&gt;
&lt;h2 id=&#34;具体步骤&#34;&gt;具体步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入命令行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入 fastboot 界面&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb reboot bootloader
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解 bootloader 锁&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fastboot flashing unlock
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用音量键和电源键进行确认, 注意解锁后手机所有数据将会被清除, 要做好备份.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;刷入第三方 recovery&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fastboot boot path/twrp.img
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;刷入成功后, 重启进入 recovery, 此时还需要进入 install, 选择 &lt;code&gt;twrp.zip&lt;/code&gt; 包再进行刷入. 缺少这一步的话, 下一次重启还会回到官方recovery.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;刷入 magisk
在 twrp 的 install 页面选择事先存入手机的 magisk.zip 进行刷入, 刷入后重启即可.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结尾&#34;&gt;结尾&lt;/h2&gt;
&lt;p&gt;整个过程下来就刷 twrp 出了些问题, 最新版本不能用是什么鬼&amp;hellip;? (勘误: 事实上只是 twrp 的加密, 输入锁屏 PIN 码即可) 好在最后还是解决了问题, 顺便写篇博客记录一下这个坑.&lt;/p&gt;
- https://cgcel.github.io/posts/2018/09/09/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/pixel-2xl-root%E6%96%B9%E6%A1%88%E8%AE%B0%E5%BD%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Shadowsocks局域网共享</title>
        <link>https://cgcel.github.io/posts/2018/09/05/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/</link>
        <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2018/09/05/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2018/09/05/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/ -&lt;h2 id=&#34;开篇&#34;&gt;开篇&lt;/h2&gt;
&lt;p&gt;好久没有更新博客, 正好熟悉了一下 ss 通过局域网共享到手机, 于是写一篇博客记录下来.&lt;/p&gt;
&lt;h2 id=&#34;详细步骤&#34;&gt;详细步骤&lt;/h2&gt;
&lt;h3 id=&#34;打开热点&#34;&gt;打开热点&lt;/h3&gt;
&lt;p&gt;首先我们打开电脑的热点, 如果没有的话就使用 wifi 共享工具打开热点, 这里使用的是 WiFi 共享精灵(顺便吐槽一下, 我一直没有找到没广告的良心工具, 换来换去还是这个最顺手, 把各种弹窗关掉将就一下吧)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-9-5-1.png&#34; alt=&#34;图1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;查看网络连接信息&#34;&gt;查看网络连接信息&lt;/h3&gt;
&lt;p&gt;打开网络连接, 我们可以通过名称来找到刚开启的热点, 如图为&lt;code&gt;本地连接3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-9-5-2.png&#34; alt=&#34;图2&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;获取本机ip地址&#34;&gt;获取本机IP地址&lt;/h3&gt;
&lt;p&gt;这是非常重要的一步, 打开 cmd 或其他工具, 输入&lt;code&gt;ipconfig&lt;/code&gt;, 第一个本地连接的 ipv4 地址就是了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-9-5-3.png&#34; alt=&#34;图3&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;shadowsocks设置&#34;&gt;Shadowsocks设置&lt;/h3&gt;
&lt;p&gt;打开 ss 客户端, 右键其图标, 勾选&lt;code&gt;允许其他设备连入&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;手机wifi手动配置&#34;&gt;手机WiFi手动配置&lt;/h3&gt;
&lt;p&gt;进入 WiFi 设置, 连接时选择高级选项, 据观察, 如果已经连接过此热点, Android 9.0 可以直接设置, 而 8.1 需要 forget 后重新设置. 如图, proxy 选手动, 然后将本机 IP 地填写进去, 端口亲测 1080 可行, 网上说的 8123 不行 (更正: 需要以 ss 的 proxy 代理端口为准). 其他选项默认即可, 保存后即可科学上网啦.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-9-5-4.jpg&#34; alt=&#34;图4&#34;&gt;&lt;/p&gt;
- https://cgcel.github.io/posts/2018/09/05/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/shadowsocks%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>树莓派系统安装以及ssh连接</title>
        <link>https://cgcel.github.io/posts/2018/07/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/</link>
        <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2018/07/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2018/07/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/ -&lt;h2 id=&#34;前期准备&#34;&gt;前期准备&lt;/h2&gt;
&lt;p&gt;在我接触单片机的时候就已经知道树莓派的厉害, 这是一台低功率计算机, 同时还可以当作一台高性能的单片机使用. 3月的时候入了一台树莓派3b, 一直积灰到现在, 终于在考试, 课设全部结束之后有空玩一玩了.&lt;/p&gt;
&lt;h2 id=&#34;系统安装&#34;&gt;系统安装&lt;/h2&gt;
&lt;h3 id=&#34;系统下载&#34;&gt;系统下载&lt;/h3&gt;
&lt;p&gt;系统安装还不算太麻烦, 直接去 &lt;a href=&#34;http://www.raspberrypi.org/downloads&#34;&gt;官网&lt;/a&gt; 下载镜像即可, 第一次装系统的话还是选官方提供的东西吧, 我们选择下载 &lt;code&gt;Raspbian&lt;/code&gt; 系统, 这是专门为树莓派提供的 Debian 系统, 有两个版本可供选择:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Raspbian Stretch with desktop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Raspbian Stretch Lite&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前者是带图形界面的版本, 后者是只有命令行页面的轻量级版本, 为了轻便, 我选择了Lite版.&lt;/p&gt;
&lt;h3 id=&#34;刷入-raspbian&#34;&gt;刷入 Raspbian&lt;/h3&gt;
&lt;p&gt;下载完毕后, 使用 &lt;code&gt;SDFormatter&lt;/code&gt; 将 SD 卡格式化, 然后使用 &lt;code&gt;Win32DiskImager&lt;/code&gt; 将系统写进 SD 卡, 类似工具有很多, 自己选用一个即可 (官网更新了官方工具 &lt;code&gt;Raspberry Pi Imager&lt;/code&gt;, 使用起来更为方便), SD 卡容量方面, 很多教程都是选择了最低限度的 2GB 的 SD 卡, 然而这都已经是古董级别的卡了, 一般在街上只能买到最低 16GB 的. 使用 &lt;code&gt;Win32DiskImager&lt;/code&gt; 写入系统成功后, 会弹窗询问是否格式化 SD 卡, 这时候点取消就行, 不然又要重新写一遍.&lt;/p&gt;
&lt;h4 id=&#34;注意事项&#34;&gt;注意事项&lt;/h4&gt;
&lt;p&gt;据说新版本的 Raspbian 默认关闭了 ssh, 需要先在 SD 卡的 boot 分区新建一个 ssh 文件夹. 将 SD 插入树莓派后供电, 看到绿灯闪烁就是系统运行成功了.&lt;/p&gt;
&lt;h2 id=&#34;ssh连接&#34;&gt;ssh连接&lt;/h2&gt;
&lt;p&gt;树莓派有多种连接电脑的方式, 比如TTL转USB连接和网线连接, 用的比较多的是网线连接, 网上有很多教程, 放一个 &lt;a href=&#34;https://blog.csdn.net/u013151320/article/details/51059328&#34;&gt;我参考的&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;用网线连接初次尝试可能会比较麻烦, 但试多几次就会熟练了, 一定要按照步骤一步一步来, 不然树莓派就分配不到 IP 地址了.&lt;/p&gt;
&lt;h2 id=&#34;更新软件源&#34;&gt;更新软件源&lt;/h2&gt;
&lt;p&gt;使用 ssh 连接上 Pi 的时候, 输入用户名密码就可以登录系统并进行操作了, 默认用户名: Pi, 默认密码: raspberry, 进入命令行页面后, 我们可以通过更换软件源来解决更新速度慢的问题, 我们采用清华源, 按照以下步骤操作:&lt;/p&gt;
&lt;p&gt;使用管理员权限，编辑 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; 文件。参考命令行为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo nano /etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 # 注释掉原文件内容，用以下内容取代：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi
deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用管理员权限，编辑 &lt;code&gt;/etc/apt/sources.list.d/raspi.list&lt;/code&gt; 文件。参考命令行为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo nano /etc/apt/sources.list.d/raspi.list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 # 注释掉原文件内容，用以下内容取代：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deb http://mirror.tuna.tsinghua.edu.cn/raspberrypi/ stretch main ui
deb-src http://mirror.tuna.tsinghua.edu.cn/raspberrypi/ stretch main ui
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存并退出后, 执行以下命令即可:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;- https://cgcel.github.io/posts/2018/07/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Assh%E8%BF%9E%E6%8E%A5/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Gcm-for-Mojo搭建总结</title>
        <link>https://cgcel.github.io/posts/2018/07/06/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/</link>
        <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2018/07/06/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2018/07/06/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/ -&lt;h2 id=&#34;开篇&#34;&gt;开篇&lt;/h2&gt;
&lt;p&gt;最近一直对手机的 3.1GB/3.8GB 的内存占用感到不爽, 想要压缩到 2.8GB 左右, 于是开始填坑 &lt;code&gt;gcm-for-mojo&lt;/code&gt; , 这是一个获取网页端微信信息并通过 &lt;code&gt;gcm&lt;/code&gt; 推送到客户端的 app, 同时他也支持 &lt;code&gt;mipush&lt;/code&gt;, &lt;code&gt;hwpush&lt;/code&gt; 等等国内平台的推送, 由于手机是 Pixel 2 XL, 原生系统自然用 gcm 就 ok 了, 微信客户端现在内存占用是越来越大了, 把后台关了也有接近300M, 而使用一些工具替代微信的后台接收信息工作, 自然就达到了省电省内存的效果了.&lt;/p&gt;
&lt;h2 id=&#34;服务器配置&#34;&gt;服务器配置&lt;/h2&gt;
&lt;p&gt;本人常用微信, 于是就只做了微信的推送, QQ 配置方法类似, 基本上举一反三, 很容易学会. 首先我们在服务器上安装 perl, Ubuntu 16.04 操作如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt-get install perl cpanminus git make screen libssl-dev libnet-ssleay-perl libio-socket-ssl-perl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;完成后&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cpanm Mojo::Weixin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们直接到 &lt;a href=&#34;https://github.com/sjdy521/Mojo-Weixin&#34;&gt;GitHub&lt;/a&gt; 上看配置步骤, 描述得很详细, 最多几分钟就可以搞定了.&lt;/p&gt;
&lt;p&gt;接下来我们新建一个 &lt;code&gt;wx.pl&lt;/code&gt; 文件, 命名随意, 内容如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;Mojo::Weixin&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;my&lt;/span&gt; &lt;span style=&#34;color:#00688b&#34;&gt;$client&lt;/span&gt; = &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;Mojo::Weixin&lt;/span&gt;-&amp;gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt;(log_encoding=&amp;gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;$client&lt;/span&gt;-&amp;gt;load(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;ShowMsg&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;$client&lt;/span&gt;-&amp;gt;load(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;GCM&amp;#34;&lt;/span&gt;,data=&amp;gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    api_url =&amp;gt; &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;https://gcm-http.googleapis.com/gcm/send&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    api_key=&amp;gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;AIzaSyB18io0hduB_3uHxKD3XaebPCecug27ht8&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    registration_ids=&amp;gt;[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;令牌, 客户端获取&amp;#34;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    allow_group=&amp;gt;[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;], &lt;span style=&#34;color:#228b22&#34;&gt;# 群聊信息推送白名单&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ban_group=&amp;gt;[],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    allow_discuss=&amp;gt;[],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ban_discuss=&amp;gt;[],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    is_ban_official =&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#228b22&#34;&gt;# 不接收公众号信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;$client&lt;/span&gt;-&amp;gt;load(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Openwx&amp;#34;&lt;/span&gt;,data=&amp;gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#658b00&#34;&gt;listen&lt;/span&gt; =&amp;gt; [ {host=&amp;gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;服务器ip地址&amp;#34;&lt;/span&gt;,port=&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;140&lt;/span&gt;}, ] ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;#其中, 端口号自定义, 如140, 需要在客户端设置中填入ip:port格式的地址才能开通快速回复功能, 如下图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;$client&lt;/span&gt;-&amp;gt;run();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将 &lt;code&gt;wx.pl&lt;/code&gt; 上传至服务器, 使用 &lt;code&gt;nohup perl wx.pl &amp;amp;&lt;/code&gt; 使其在后台运行. 这是个效果不太好的方法, 断开 ssh 连接时很容易把进程也关掉, 翻阅教程时我发现可以用另一个方法来实现后台运行:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;screen -S docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perl wx.pl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;2018-07-07-03.jpg&#34; alt=&#34;设置截图&#34;&gt;
&lt;img src=&#34;2018-07-07-01.jpg&#34; alt=&#34;效果截图1&#34;&gt;
&lt;img src=&#34;2018-07-07-02.jpg&#34; alt=&#34;效果截图2&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时断开 ssh 连接也不受任何干扰, 放置后台成功. 如果想回到 screen, 可以使用以下指令, 结束操作后挂起即可:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;screen -ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;screen -r pid&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;2018-07-07-01.png&#34; alt=&#34;示意图&#34;&gt;&lt;/p&gt;
&lt;p&gt;附上一篇 screen &lt;a href=&#34;https://www.ibm.com/developerworks/cn/linux/l-cn-screen/&#34;&gt;使用教程&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;优势与不足&#34;&gt;优势与不足&lt;/h2&gt;
&lt;h3 id=&#34;优势&#34;&gt;优势:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;gcm-for-mojo 配置起来比 EFB 要简单得多,毕竟依赖没有后者多&lt;/li&gt;
&lt;li&gt;fcm 推送很及时&lt;/li&gt;
&lt;li&gt;自定义设置比较丰富&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;不足&#34;&gt;不足:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;比起 EFB, gcm-for-mojo不能显示图片和表情包, 甚至 emoji 也不会显示&lt;/li&gt;
&lt;li&gt;使用 nohup 指令让其在后台运行时, 与服务器断开连接后有一次会自动关闭后台进程&lt;/li&gt;
&lt;li&gt;不够稳定, 一方面 WebWeixin 本身就是个神奇的东西, 诸如 ItChat, EFB, gcm-for-mojo 这些借助网页版微信获取信息的工具会导致账号被封(一段时间内将无法使用网页登录)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;之前用过 &lt;code&gt;EFB1.0&lt;/code&gt;, 没多久就弃了, 原因是连接很容易断开, 一旦断开连接就要再重新扫码登录, 而微信无法在本机上扫码登录, 于是就比如借助另一个设备显示二维码, 可以想象有多麻烦, 当然 gcm-for-mojo 也是如此, 正好借此机会对比一下两者的稳定性, 希望这次能用久一点吧🤷‍♀️&lt;/p&gt;
- https://cgcel.github.io/posts/2018/07/06/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/gcm-for-mojo%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/ - This is a customized copyright.</description>
        </item>
    
    
  </channel>
</rss> 