<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>烂杯的博客</title>
    <link>https://cgcel.github.io/</link>
    <description>Recent content on 烂杯的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Sun, 16 Oct 2022 00:16:55 +0800</lastBuildDate>
    
        <atom:link href="https://cgcel.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>PhotoPrism的部署以及GooglePhotos图片搬运</title>
        <link>https://cgcel.github.io/posts/2022/10/16/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/</link>
        <pubDate>Sun, 16 Oct 2022 00:16:55 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2022/10/16/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2022/10/16/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/ -&lt;p&gt;&lt;img src=&#34;https://gitee.com/cgcel/image/raw/master/archive/Pasted%20image%2020221016001933.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
- https://cgcel.github.io/posts/2022/10/16/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/photoprism%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8Agooglephotos%E5%9B%BE%E7%89%87%E6%90%AC%E8%BF%90/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Termux 安装并使用 Frpc</title>
        <link>https://cgcel.github.io/posts/2022/09/28/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Wed, 28 Sep 2022 09:59:57 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2022/09/28/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2022/09/28/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/ -&lt;h2 id=&#34;写在开头&#34;&gt;写在开头&lt;/h2&gt;
&lt;p&gt;本篇是上一篇 [[通过ZeroTier和Scrcpy远程操控安卓机]] 的续篇, 上篇的方案存在几个缺点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于手机的无线调试不稳定 (网络断开就会关闭, 需要手动重新开启),&lt;/li&gt;
&lt;li&gt;由于使用了免费服务 &lt;code&gt;ZeroTier&lt;/code&gt; 进行内网穿透, 连接环境在墙内时好时坏, 不稳定&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;综上的因素导致这个方案总体不稳定, 参考了 &lt;a href=&#34;https://github.com/acgpiano/Android-Remote&#34;&gt;Github 上的一篇文章&lt;/a&gt;, 本篇记录一个&lt;strong&gt;基于 Android 12&lt;/strong&gt; 和 &lt;strong&gt;新版本 Termux&lt;/strong&gt; 的, 更加稳健的方案, 通过在已 Root 的手机上安装 &lt;code&gt;Termux&lt;/code&gt;, 然后在 &lt;code&gt;Termux&lt;/code&gt; 中配置 &lt;code&gt;ssh&lt;/code&gt; (远程 &lt;code&gt;ssh&lt;/code&gt; 操控) 和  &lt;code&gt;frpc&lt;/code&gt; (通过私有服务器的 IP 进行反向代理), 实现远程 &lt;code&gt;adb&lt;/code&gt; 配对设备并通过 &lt;code&gt;Scrcpy&lt;/code&gt; 对手机进行操作.&lt;/p&gt;
&lt;h2 id=&#34;硬件准备&#34;&gt;硬件准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;有 &lt;strong&gt;公网 IP&lt;/strong&gt;, 并装有 &lt;strong&gt;Frps&lt;/strong&gt; 的服务器 1台&lt;/li&gt;
&lt;li&gt;已 &lt;strong&gt;Root&lt;/strong&gt; 的安卓手机&lt;/li&gt;
&lt;li&gt;装有 &lt;strong&gt;adb&lt;/strong&gt; 和 &lt;strong&gt;scrcpy&lt;/strong&gt; 的电脑一台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方案使用手机机型为 &lt;code&gt;Oneplus 8T,&lt;/code&gt; 运行基于 &lt;code&gt;Android 12.1&lt;/code&gt; 的 LineageOS 19.1, 使用 &lt;code&gt;Magisk 25.2&lt;/code&gt; 获取 Root 权限.&lt;/p&gt;
&lt;h2 id=&#34;配置过程&#34;&gt;配置过程&lt;/h2&gt;
&lt;h3 id=&#34;termux-安装与配置&#34;&gt;Termux 安装与配置&lt;/h3&gt;
&lt;h4 id=&#34;1-安装-f-droid&#34;&gt;1. 安装 F-Droid&lt;/h4&gt;
&lt;p&gt;首先在手机端下载并安装应用商店 F-Droid, 从中安装最新版 Termux (Google Play 版本落后很多)&lt;/p&gt;
&lt;h4 id=&#34;2-获取存储权限&#34;&gt;2. 获取存储权限&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;termux-setup-storage
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;3-获取-root-权限与设置-root-账号密码&#34;&gt;3. 获取 Root 权限与设置 root 账号密码&lt;/h4&gt;
&lt;p&gt;在 Termux 命令行中获取 Root 权限, 输入:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在弹窗中同意 Termux 获取 Root 权限, 进入 su 后, 键入 &lt;code&gt;passwd&lt;/code&gt; 设置 root 账号的密码.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启 Termux 以便于后续的操作.&lt;/p&gt;
&lt;h4 id=&#34;4-更换清华源httpsmirrorstunatsinghuaeducnhelptermux&#34;&gt;4. &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/termux/&#34;&gt;更换清华源&lt;/a&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;termux-change-repo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据 Termux 的 GUI 提示进行操作, 使用空格和回车选择国内源, 这里因为个人习惯选择清华源.&lt;/p&gt;
&lt;h4 id=&#34;5-安装必要包&#34;&gt;5. 安装必要包&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt update &amp;amp;&amp;amp; apt upgrade -y --force-yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install openssh tsu cronie -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;6-optional-开启-ssh&#34;&gt;6. (Optional) 开启 SSH&lt;/h4&gt;
&lt;p&gt;为了方便后续命令行操作, 可以选择先在 Termux 开启 SSH, 便于后续操作. 在 Termux 命令行中输入:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开启后, 获取手机的局域网 IP, 在桌面端命令行输入以下指令尝试远程连接 (openssh 默认端口为 8022):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh root@{局域网IP} -p &lt;span style=&#34;color:#b452cd&#34;&gt;8022&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果成功, 将会提示输入接受密钥以及输入密码.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;参考链接&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/freeking101/article/details/122725389&#34;&gt;https://blog.csdn.net/freeking101/article/details/122725389&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.termux.com/wiki/Main_Page&#34;&gt;https://wiki.termux.com/wiki/Main_Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;部署-frpc-并测试连接&#34;&gt;部署 Frpc 并测试连接&lt;/h3&gt;
&lt;h4 id=&#34;1-服务器端-frps-部署&#34;&gt;1. 服务器端 Frps 部署&lt;/h4&gt;
&lt;p&gt;在服务器命令行输入 &lt;code&gt;name -a&lt;/code&gt; 查看服务器系统架构. 根据服务器系统架构下载对应的 &lt;a href=&#34;https://github.com/fatedier/frp&#34;&gt;Frp&lt;/a&gt; 版本, 在服务器端解压缩并根据实际情况在 &lt;code&gt;frps.ini&lt;/code&gt; 配置 Frps 端口, token. dashboard 等. 配置完成后, 在解压缩的目录命令行输入 &lt;code&gt;./frps -c ./frps.ini&lt;/code&gt;, 查看服务是否正常运行.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220929161426.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-移动端-frpc-部署&#34;&gt;2. 移动端 Frpc 部署&lt;/h4&gt;
&lt;p&gt;首先在 Termux 中开启手机 adb 调试端口, 默认为 5555:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#658b00&#34;&gt;cd&lt;/span&gt; /system/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./setprop service.adb.tcp.port &lt;span style=&#34;color:#b452cd&#34;&gt;5555&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./stop adbd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./start adbd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下载 &lt;a href=&#34;https://github.com/fatedier/frp&#34;&gt;Frp&lt;/a&gt; linux arm64 版 (现在的安卓机一般都是arm64位的了) 至电脑, 按照 &lt;a href=&#34;https://gofrp.org/docs/&#34;&gt;官方文档&lt;/a&gt; 以及服务器实际情况配置好 &lt;code&gt;frpc.ini&lt;/code&gt;, 将手机通过 USB 连接电脑, 然后将 &lt;code&gt;frpc.ini&lt;/code&gt; 和 &lt;code&gt;frpc&lt;/code&gt; 复制至 &lt;code&gt;storage/emulated/0/Download&lt;/code&gt; 中.&lt;/p&gt;
&lt;p&gt;在 Termux 的解压目录中, 输入 &lt;code&gt;./frpc -c ./frpc.ini&lt;/code&gt;, 观察连接情况.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220929160549.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;实际操作中, 在手机端开启 Frpc 服务时报错: &lt;code&gt;[W] [service.go:82] login to server failed: dial tcp: lookup xx.xx.com on [::1]:53: read udp [::1]:37354-&amp;gt;[::1]:53: read: connection refused&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&#34;https://github.com/fatedier/frp/issues/1175&#34;&gt;作者答复&lt;/a&gt;, 调整 &lt;code&gt;frpc.ini&lt;/code&gt; 配置文件可解决.&lt;/p&gt;
&lt;h4 id=&#34;3-电脑端远程连接并操控手机&#34;&gt;3. 电脑端远程连接并操控手机&lt;/h4&gt;
&lt;p&gt;连接正常后, 在电脑命令行中配对手机:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb connect {服务器 IP}:{frpc.ini 中配置的 &lt;span style=&#34;color:#b452cd&#34;&gt;5555&lt;/span&gt; 映射端口}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配对成功后, 输入以下指令连接手机, 可根据网络情况自行设置分辨率和比特率等, 参考&lt;a href=&#34;https://github.com/Genymobile/scrcpy&#34;&gt;官方文档&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scrcpy -m &lt;span style=&#34;color:#b452cd&#34;&gt;720&lt;/span&gt; -b 2M
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;Pasted_image_20220929160653.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220929160716.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220929160831.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4-配置-frps-service&#34;&gt;4. 配置 Frps service&lt;/h4&gt;
&lt;p&gt;在服务器中配置 Frps service, 使其更方便操控. 根据 &lt;a href=&#34;https://gofrp.org/docs/setup/systemd/&#34;&gt;官方文档&lt;/a&gt; 完成设置.&lt;/p&gt;
&lt;h3 id=&#34;配置定时任务&#34;&gt;配置定时任务&lt;/h3&gt;
&lt;p&gt;将文件复制至 Termux 根目录:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp storage/downloads/frpc ~/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp storage/downloads/frpc.ini ~/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x ./frpc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在根目录, 键入 &lt;code&gt;nano start_adb_frpc&lt;/code&gt; 编辑启动脚本:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#!/data/data/com.termux/files/usr/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;termux-wake-lock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# open adb port, ssh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#658b00&#34;&gt;cd&lt;/span&gt; /system/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./setprop service.adb.tcp.port &lt;span style=&#34;color:#b452cd&#34;&gt;5555&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./stop adbd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ./start adbd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# open frp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#658b00&#34;&gt;cd&lt;/span&gt; ~
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo killall frpc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nohup sudo ./frpc -c ./frpc-pi.ini &amp;gt; ./log.txt 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt; &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;killall crond
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crond
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;赋予可执行权限:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x ./start_adb_frpc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在根目录中, 键入 &lt;code&gt;./start_adb_frpc&lt;/code&gt; 即可启动服务.&lt;/p&gt;
&lt;p&gt;最后, 进入 crontab 配置定时任务, 确保服务后台存活:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 进入 crontab&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crontab -e
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 crontab 中配置定时任务:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 每半个小时重启脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*/30 * * * * ~/start_adb_frpc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;至此, 所有配置已经完成.&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;配置完成后, 已经使用这个方案进行了两次远程操作, 全程稳定流畅, 已经能够完美满足我个人的使用要求, 后续准备将服务移植至我的 &lt;strong&gt;一加6&lt;/strong&gt; 中, 一加 8T 就继续作为备机用来刷机玩.&lt;/p&gt;
- https://cgcel.github.io/posts/2022/09/28/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/android12%E7%9A%84termux%E5%AE%89%E8%A3%85%E5%B9%B6%E4%BD%BF%E7%94%A8frpc%E8%AE%B0%E5%BD%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>通过 ZeroTier 和 Scrcpy 远程操控安卓机</title>
        <link>https://cgcel.github.io/posts/2022/09/25/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/</link>
        <pubDate>Sun, 25 Sep 2022 11:24:55 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2022/09/25/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2022/09/25/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/ -&lt;h2 id=&#34;写在开头&#34;&gt;写在开头&lt;/h2&gt;
&lt;p&gt;最近由于有需要远程操控手机的需求, 目前我所知道的第三方服务 TeamViewer, AirDroid, ToDesk 等均可支持远程操控安卓设备, 但是也存在一些缺点, 比如墙内连接不稳定延时高, 需要注册账号, 需要付费, 需要 Root 等, 作为折腾党, 也趁着8t刚刷上 LineageOS19.1 的这段时间重新试了一下通过安装, 配置 &lt;code&gt;ZeroTier&lt;/code&gt; 和 &lt;code&gt;Scrcpy&lt;/code&gt; 完成对手机的操控, 其实去年就做了这样的尝试, 但是没有做记录, 这次就趁热打铁水一篇博客吧.&lt;/p&gt;
&lt;h2 id=&#34;软件安装&#34;&gt;软件安装&lt;/h2&gt;
&lt;p&gt;软件安装分为操控端设备 (实例为带图形桌面的电脑), 被控端设备 (安卓手机, 实例为运行 Android 12.1 的一加8T):&lt;/p&gt;
&lt;h3 id=&#34;操控端&#34;&gt;操控端&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zerotier.com/download/&#34;&gt;ZeroTier 1.10.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/releases&#34;&gt;Scrcpy 1.24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio/releases/platform-tools&#34;&gt;adb 1.0.41&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-Notion&#34; data-lang=&#34;Notion&#34;&gt;其中, Windows 环境在使用 adb 时遇到了 adb 版本过低无法使用 `adb pair` 指令的情况. 按照官方文档操作会输出一大串 adb 使用指引, 忘记截图了, 解决方法是更新安装的 platform-tools 文件夹内的 adb 版本. 如果更新了之后还是出现这种情况, 应该在电脑环境中检查是否有其他自带了 adb 的软件也注册了环境变量, 将其从环境变量中移除即可, 如果选择不移除, 可以直接在 adb 的安装目录启动命令行, 此时将会优先使用目录下的 adb.exe.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;被控端&#34;&gt;被控端&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ZeroTier One 1.8.9-1 (Google Play 安装)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;zerotier-网络注册&#34;&gt;ZeroTier 网络注册&lt;/h2&gt;
&lt;p&gt;本方案采用 ZeroTier 构建设备点对点连接, 实现内网穿透. 要使用 ZeroTier, 应首先&lt;a href=&#34;https://my.zerotier.com/network&#34;&gt;注册账号并创建 Network&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;创建好网络后, 在 &lt;code&gt;操控端&lt;/code&gt; 以及 &lt;code&gt;被控端&lt;/code&gt; 开启 ZeroTier 客户端并加入网络, 然后通过 ZeroTier 官网的个人控制台允许设备接入网络.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-09-25_16-09-20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设备在 ZeroTier 网络中的虚拟 IP 可以在控制台查询, 或者在设备中自行查询比对. Ok, 准备就绪, 可以开始准备操控手中的安卓设备了!&lt;/p&gt;
&lt;h2 id=&#34;配置无线调试-wireless-debugging&#34;&gt;配置无线调试 (Wireless Debugging)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安卓设备从 Android 11 开始支持通过 WiFi 调试设备, &lt;a href=&#34;https://developer.android.com/studio/command-line/adb#connect-to-a-device-over-wi-fi-android-11+&#34;&gt;参考链接&lt;/a&gt;, 根据文档描述, 我们首先开启手机的 &lt;code&gt;开发者选项&lt;/code&gt;, 然后勾选 &lt;code&gt;无线调试&lt;/code&gt;, 勾选后进入无线调试的子菜单, 点击 &lt;code&gt;使用配对码配对设备&lt;/code&gt;, 此时手机会弹窗提示当前设备的 &lt;code&gt;WLAN配对码&lt;/code&gt;, &lt;code&gt;IP 地址和端口&lt;/code&gt;, 记下这些信息.
&lt;img src=&#34;Snipaste_2022-09-25_16-24-51.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;在操控端电脑开启命令行, 输入 &lt;code&gt;adb pair IP地址:端口&lt;/code&gt;, 此处的信息为第一步获得的信息, 回车后继续根据提醒输入六位数字配对码, 此时不出意外的话将完成配对工作.&lt;/li&gt;
&lt;li&gt;(Optional) 存在配对成功后 adb 不会自动连接设备的情况, 此时可以在命令行输入 &lt;code&gt;adb connect IP地址:端口&lt;/code&gt;, 注意此处的 IP 与端口并非第一步的, 而是进入无线调试子菜单页面显示的 IP 地址和端口. 连接了几次发现这里的端口都是 37995, 不知道是不是固定的端口所以不打码.
&lt;img src=&#34;Snipaste_2022-09-25_16-26-53.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;Snipaste_2022-09-25_16-34-01.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;连接成功后, 在命令行输入 &lt;code&gt;adb devices&lt;/code&gt; 即可看见刚刚配对成功的手机了, 输入 &lt;code&gt;scrcpy&lt;/code&gt; 即可远程操控手机了.
&lt;img src=&#34;Snipaste_2022-09-25_16-34-53.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;接下来只需要保证操控端能一直在线就可以实现随时随地的在外操控家中的手机了. 这个方案应该不算特别折腾, 特别是对我这种经常刷机的人来说其实环境早就装的差不多了, 只需要配对设备就可以了. 但是有一个缺点是: 一旦手机断开与局域网的连接, 重连后大概率会需要重新配对, 此时就需要重新接触手机, 打开设置查看新的配对码和端口了. 所以如果不追求连接质量与性能的话最好还是在电脑装一个模拟器.&lt;/p&gt;
- https://cgcel.github.io/posts/2022/09/25/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/%E9%80%9A%E8%BF%87zerotier%E5%92%8Cscrcpy%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7%E5%AE%89%E5%8D%93%E6%9C%BA/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Pi4TNTCase -- 我的树莓派机箱</title>
        <link>https://cgcel.github.io/posts/2022/06/07/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/</link>
        <pubDate>Tue, 07 Jun 2022 20:27:35 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2022/06/07/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2022/06/07/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/ -&lt;h2 id=&#34;写在开头&#34;&gt;写在开头&lt;/h2&gt;
&lt;p&gt;我的树莓派作为服务器使用已经有一段时间了, 之前安装了一个铝壳被动散热, 在还没进入夏天的5月份, 轻负载时可以突破50度, 这时候用手直接摸散热壳已经是很烫的了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;378776da6dd6a7747c4de0ce0265190.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于pi放在了我房间的木桌上, 让我不太敢用力压榨它, 给它更换更好的散热已经是很早就有的想法.&lt;/p&gt;
&lt;p&gt;正巧最近618将至, 我在浏览散热器的时候发现了树莓派机箱的推荐, 大概是下面这种形状:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220607213801.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;其实这种样子的机箱我在咸鱼看过很多次, 不过我觉得外观上比较一般, 让我没有购买的欲望, 于是便萌生了自己设计一个机箱并打印的想法, 正好自己对3D打印建模挺感兴趣, 可以利用这次机会入坑一下, 顺便学习建模.&lt;/p&gt;
&lt;p&gt;网上冲浪之后, 我了解到3D打印主要使用 &lt;code&gt;.stl&lt;/code&gt; 格式的模型, 而可以生成这种格式模型的软件也有很多, 比如 Solid Works, Zbrush, Sketchup 等等, 我很快就决定使用 Sketchup 进行建模, 因为我女友可以指导我, 让我更容易上手. 至于模型的打印, 则可以交给有3D打印机的朋友或者网店代工.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;建模部分&#34;&gt;建模部分&lt;/h2&gt;
&lt;h3 id=&#34;灵感来源&#34;&gt;灵感来源&lt;/h3&gt;
&lt;p&gt;在做上述的功课时, 我了解到一个主流的3D打印模型分享站, 国内称之为 &lt;strong&gt;&lt;a href=&#34;https://www.thingiverse.com/&#34;&gt;T站&lt;/a&gt;&lt;/strong&gt;, 在上面我看到了一个比较感兴趣的 &lt;a href=&#34;https://www.thingiverse.com/thing:4059929&#34;&gt;模型&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220607215626.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;看到这个正方体我马上联想到 MC 中 TNT 方块的样子:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220607215858.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据T站的马里奥问号箱, 我可以稍作修改, 将模型改成我想要的 TNT 形状, 对于入门学习 Sketchup 建模的我来说是比较好的一个方案.&lt;/p&gt;
&lt;h3 id=&#34;建模&#34;&gt;建模&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在 Sketchup 中新建模型, 然后导入 .stl 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;17d65f48f7a51e634ff31eb836b3acc.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;抹平原模型中的四边图案&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;bac70e5f0d60f00f359798de82a587a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;46697f737140bb6a325534675da46d5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;推拉中间白条区域, 准备实现参照模型的凸起部分&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;ef4c0fa8a2a8d88d34b40e4b268dcd5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;连接突起白条, 并根据3D文字进行修改, 将 N 改成像素风格, 然后使用推拉, 在白条上刻字&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;ce9e20aa735ef26c779561a1d285a20.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;初步上色看看效果&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;fcdce8c79953acded37eb2fb34a3327.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;在上半部分加入凹槽, 使模型更贴近原 TNT 的样子&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;088b0ad6bce31ad74c5f9f9ca065153.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;改造盖子, 还是一样操作先把原模型图案去除然后推拉成平面, 由于树莓派将会安装卧式散热, 盖子设计成了镂空形状, 方便透气&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;93541d98f7176618e3a7ed9f43819b5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;模型打印与加工&#34;&gt;模型打印与加工&lt;/h2&gt;
&lt;h3 id=&#34;打印模型&#34;&gt;打印模型&lt;/h3&gt;
&lt;p&gt;在找店家打印的同时, 我了解到3D打印机主要分 &lt;code&gt;SLA&lt;/code&gt; 和 &lt;code&gt;FDM&lt;/code&gt; 这两种.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;FDM是我印象比较深的有喷头的打印机, 通过熔融沉积技术将材料加热并按照轨迹打印模型, 入门打印机大多都是FDM打印机, 这种方法打印的模型表面比较粗糙, 精度较低.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SLA是最早出现的快速原型制造工艺, 通过光轴移动来打印. SLA工业机型是激光固化成型, 在精度上有FDM机型无法逾越的优势, 可制作各种结构复杂的精密零件和组装件.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最终, 和店家确定了方案, 采用 SLA 打印机打印, 材料为光敏树脂 (店家推荐用尼龙打印, 可以耐高温, 但出于成本考虑还是选择树脂, 毕竟是我的第一次尝试, 没必要杀鸡用牛刀), 打印费用150元 (原想着几十块解决, 没想到最便宜的也要上百)&lt;/p&gt;
&lt;p&gt;几天后, 模型打印完成, 经过打磨后寄给了我.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2aca7b2923a46010ec87a582f34aa56_1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;手涂模型&#34;&gt;手涂模型&lt;/h3&gt;
&lt;p&gt;店家的上色费用要200, 比打印费还贵, 所以在同事大佬的建议下我买了水补土和消光, 准备后续上色, 漆料则使用同事友情赞助的水性漆和缓干剂. 不过由于临时行程有变, 一两天内要回东莞了, 喷雾不能带进公共交通, 所以我要赶工直接上色, 手涂完就给我的 pi 装上专属机箱.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找了两个冻干咖啡盖子用来装漆料, 准备开工&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;5197694a03461189df8e2a3d6600cff.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;手涂上色, 先找内壁上点红色试试水&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;6127b80760370692ccc0873ae3542fe.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;d95974074a2e90922c9d79e452ecf23.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;外壁简单上了一两层红漆&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;e8793d6c471fa4e2972bcadeb69ee5e.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;大佬建议先上白色部分, 避免红色部分修修补补&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;d59bac08f9987b187372f6a1803f656.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;f03be37065ffb5f43da418baf730c21.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;上完白色后继续补红色, 主体部分除了文字部分基本涂完&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;32fc75ef210d7df2d3174f128775734.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;盖子粗上色&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;e2a44e745340f30c06217e4464b2e10.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;b31877873b08818f9e8fa3cf8071288.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;回到东莞继续, 先把 pi 的散热壳拆了, 还有把散热器装上先看看效果&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;7dd9e56012e5ba8edaaa2499f677f2d.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;853425c4a1a7e8d1ecb5efb064e9513.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;继续加深盖子颜色, 直到和主题相差无几&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;5bf4e0363101b28812c4224ab00e256.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;上色黑字部分, 以及最后的成品图&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;8721d6673691e1c743f15be24985454.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;0757ff0c97365c593b954804df8ecb8.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;组装成品&#34;&gt;组装成品&lt;/h2&gt;
&lt;p&gt;将装好散热器的 pi 放入箱子, 由于螺丝买的不够长, 暂时无法很好的固定住, 这里先靠外接的线固定住, 后续回来再换螺丝.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;c923a7c956d6c846d77c0839af5388f.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;将盖子盖上, 这里的螺丝依旧买小了, 因为我不想用自攻螺丝破坏箱体, 所以就先这样固定.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;8dad0b52b2e2931db7ae673f38c8425.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;插入SD卡, 连接上电源线, 网线以及移动硬盘, 组装工作基本完成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;6f3749a92483885ad487231d6596404.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;f9e6810ea63b2be401d543e289c26b6.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;测试散热&#34;&gt;测试散热&lt;/h2&gt;
&lt;p&gt;最后到了实战部分, 将cpu温度与之前的数据对比, 轻负载时温度在38-42度之间, 满载时温度在50度左右, 达到了我的预期, 今后也可以放心折腾了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1611fa9014c603b3e1aa882acf564ab.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;796af2d94730f2b6a1c274ad3260de5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;后续计划&#34;&gt;后续计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 散热贴更换为硅脂&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 更换合适尺寸的螺丝与铜柱&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 打磨重涂, 加上底漆 (水补土) 与保护漆 (消光)&lt;/li&gt;
&lt;/ul&gt;
- https://cgcel.github.io/posts/2022/06/07/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/pi4tntcase--%E6%88%91%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E6%9C%BA%E7%AE%B1/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Scrapy初上手: 爬取小说记录</title>
        <link>https://cgcel.github.io/posts/2022/05/17/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Tue, 17 May 2022 14:13:36 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2022/05/17/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2022/05/17/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/ -&lt;h2 id=&#34;开篇&#34;&gt;开篇&lt;/h2&gt;
&lt;p&gt;由于最近因为疫情居家健康监测, 还没复工, 我在家边学习边玩. 在家期间看了 ⌈86⌋ 第二季, 简单学了一下 Go, 还有捡回来 Scrapy 学习一下. 说到 Scrapy, 本科的时候就有学习过, 但是当时找的是B站上的中文教程, 感觉教的我一头雾水, 这次从官方文档开始下手, 结合 Google, 感觉一下子清晰明了了许多.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;准备&#34;&gt;准备&lt;/h2&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;现在的 Scrapy 安装简单了不少, 几年前在 Windows 端还不能直接用 pip 安装. 现在只需要一句 &lt;code&gt;pip install scrapy&lt;/code&gt; 即可.&lt;/p&gt;
&lt;h3 id=&#34;编译环境&#34;&gt;编译环境&lt;/h3&gt;
&lt;p&gt;编译环境当然还是永远的 VS Code.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;h3 id=&#34;计划&#34;&gt;计划&lt;/h3&gt;
&lt;p&gt;大佬提供了一个塞满 URL 的 json 文件给我, 都是小说网站相关的, 既然要爬取小说网站, 就不可避免地要爬取同一本书的多个章节, 于是很容易联想到使用 Scrapy 来实现, 毕竟是一个成名已久的 Python 爬虫框架, 总比我简单粗暴用 requests 来爬好多了.&lt;/p&gt;
&lt;p&gt;那么接下来就是解决以下几个问题, 最后实现整个爬取的功能:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据小说主页 URL 获取各章节标题以及 URL&lt;/li&gt;
&lt;li&gt;根据章节 URL 爬取章节内容并保存&lt;/li&gt;
&lt;li&gt;将 Scrapy 爬取到的内容按顺序排列后, 依次存入 &lt;code&gt;.txt&lt;/code&gt; 文件中&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;开始&#34;&gt;开始&lt;/h3&gt;
&lt;p&gt;首先, 安装完 Scrapy 后, 按照官方文档, 直接在目录启动命令行, 捅过命令行生成项目:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ scrapy startproject biquge_dl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成后, 在 &lt;code&gt;spiders/&lt;/code&gt; 子文件夹中新建 &lt;code&gt;fiction_spider.py&lt;/code&gt;, 用于编写爬虫代码.&lt;/p&gt;
&lt;p&gt;根据官方的 QuickStart 例程, 首先新建一个 class, 继承 &lt;code&gt;scrapy.Spider&lt;/code&gt;, 后续只需要结合源码和文档, 就可以继续写下去了.&lt;/p&gt;
&lt;h3 id=&#34;获取小说章节-url&#34;&gt;获取小说章节 URL&lt;/h3&gt;
&lt;p&gt;首先在浏览器打开开发者工具对小说主页进行抓包, 可以看到该网站并没有用到一些 API, 于是准备采用 XPATH 来对章节 URL 进行爬取, 观察到无论多长篇幅的小说, 其章节都在一页中显示, 这无疑降低了部分难度, 拿来练手 scrapy 实在是再合适不过了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Pasted_image_20220524212212.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过重写 &lt;code&gt;parse()&lt;/code&gt;, 对小说主页 html 进行解析并抓取章节 URL.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;scrapy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;FictionSpider&lt;/span&gt;(scrapy.Spider):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;parse&lt;/span&gt;(self, response, **kwargs):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self.logger.info(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;Parse function called on &lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&lt;/span&gt;, response.url)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fiction_name = response.xpath(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;//*[@id=&amp;#34;info&amp;#34;]/h1/text()&amp;#39;&lt;/span&gt;).get()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        section_order = &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; episode_doc &lt;span style=&#34;color:#8b008b&#34;&gt;in&lt;/span&gt; response.xpath(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;//*[@id=&amp;#34;list&amp;#34;]/dl/dd[*]/a&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            section_title = episode_doc.xpath(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;.//text()&amp;#39;&lt;/span&gt;).get()            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            url = episode_doc.xpath(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;.//@href&amp;#39;&lt;/span&gt;).get()            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            section_url = self.base_url + url            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            request = scrapy.Request(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                url=section_url, callback=self.parse_content, cb_kwargs=&lt;span style=&#34;color:#658b00&#34;&gt;dict&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            request.cb_kwargs[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;fiction_name&amp;#39;&lt;/span&gt;] = fiction_name            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            request.cb_kwargs[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;section_order&amp;#39;&lt;/span&gt;] = section_order            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            request.cb_kwargs[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;section_title&amp;#39;&lt;/span&gt;] = section_title            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            section_order += &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;yield&lt;/span&gt; request
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;获取成功后, 将小说名, 章节序号, 章节名作为参数传给 &lt;code&gt;parse_content()&lt;/code&gt; 函数, 继而对章节进行爬取.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;bs4&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;as&lt;/span&gt; bs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;biquge_dl.items&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; BiqugeDlItem
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;FictionSpider&lt;/span&gt;(scrapy.Spider):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;parse_content&lt;/span&gt;(self, response, fiction_name, section_order, section_title):   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self.logger.info(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;Parse content function called on &lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&lt;/span&gt;, response.url)       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        contents = response.xpath(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;//*[@id=&amp;#34;content&amp;#34;]/text()&amp;#39;&lt;/span&gt;).getall()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;len&lt;/span&gt;(contents) &amp;lt;= &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            soup = bs(response.body, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;html.parser&amp;#39;&lt;/span&gt;)           
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            contents = soup.find_all(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;div&amp;#34;&lt;/span&gt;, {&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;class&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;box_con&amp;#34;&lt;/span&gt;}).get_text()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        item = BiqugeDlItem()        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        item[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] = fiction_name        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        item[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;] = section_order        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        item[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;] = section_title
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        item[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;] = contents
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; item
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;items-的使用&#34;&gt;Items 的使用&lt;/h3&gt;
&lt;p&gt;写上述  &lt;code&gt;parse_content()&lt;/code&gt; 时发现, 直接使用 scrapy 对小说进行章节爬取, 并按章节名每章下载是很简单的, 只需要直接跑爬虫就可以, 各个章节会乱序下载下来, 但如果想要只下载一份文件, 按顺序存储章节, 那么就需要使用 scrapy 的 &lt;code&gt;items&lt;/code&gt; 和 &lt;code&gt;pipelines&lt;/code&gt; 了, 这两个 .py 文件会随着一开始命令行创建项目时一并创建, 所以可以很轻易地在 &lt;code&gt;biquge_dl/&lt;/code&gt; 文件夹内找到, 只需要对这两个文件进行重写, 并在 &lt;code&gt;parse_content()&lt;/code&gt; 中将内容写进 item 中, 就能实现参数的传递.&lt;/p&gt;
&lt;p&gt;查阅 &lt;a href=&#34;%5Bhttps://docs.scrapy.org/en/latest/topics/items.html%5D(https://docs.scrapy.org/en/latest/topics/items.html#module-scrapy.item)&#34;&gt;官方文档&lt;/a&gt;, 对 Items 的描述如下:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The main goal in scraping is to extract structured data from unstructured sources, typically, web pages. &lt;a href=&#34;https://docs.scrapy.org/en/latest/topics/spiders.html#topics-spiders&#34;&gt;Spiders&lt;/a&gt; may return the extracted data as items, Python objects that define key-value pairs.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Scrapy supports &lt;a href=&#34;https://docs.scrapy.org/en/latest/topics/items.html#item-types&#34;&gt;multiple types of items&lt;/a&gt;. When you create an item, you may use whichever type of item you want. When you write code that receives an item, your code should &lt;a href=&#34;https://docs.scrapy.org/en/latest/topics/items.html#supporting-item-types&#34;&gt;work for any item type&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;可见 item 可以将提取的数据按一定格式返回, 只需要规划好传入参数, 就可以利用 item 实现排序的操作.&lt;/p&gt;
&lt;h3 id=&#34;item-pipeline-的使用&#34;&gt;Item pipeline 的使用&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.scrapy.org/en/latest/topics/item-pipeline.html&#34;&gt;官方文档&lt;/a&gt; 这样介绍:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;After an item has been scraped by a spider, it is sent to the Item Pipeline which processes it through several components that are executed sequentially.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Each item pipeline component (sometimes referred as just “Item Pipeline”) is a Python class that implements a simple method. They receive an item and perform an action over it, also deciding if the item should continue through the pipeline or be dropped and no longer processed.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Typical uses of item pipelines are:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;cleansing HTML data&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;validating scraped data (checking that the items contain certain fields)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;checking for duplicates (and dropping them)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;storing the scraped item in a database&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;意为, 在 spider 抓取一个 item 后, scrapy 通过 Item Pipeline 来处理这个 item, 结合本项目, 只需要将爬取到的 item 交由 Item Pipeline 统一处理即可实现按顺序存储的功能.&lt;/p&gt;
&lt;h3 id=&#34;传递章节参数-实现按顺序保存&#34;&gt;传递章节参数, 实现按顺序保存&lt;/h3&gt;
&lt;p&gt;为了实现章节按照顺序写入, 首先确认实现思路:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 items.py 定义一个 Item 类, 自定义传入参数, 以供调用&lt;/li&gt;
&lt;li&gt;在 pipelines.py 定义一个 Pipeline 类, 对传入的 item 进行处理&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;itemspy&#34;&gt;items.py&lt;/h4&gt;
&lt;p&gt;打开 items.py, 按照例子创建一个继承 &lt;code&gt;scrapy.Item&lt;/code&gt; 的 &lt;code&gt;BiqugeDlItem&lt;/code&gt; 类, 对类进行参数的定义:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;BiqugeDlItem&lt;/span&gt;(scrapy.Item):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;# define the fields for your item here like:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;# name = scrapy.Field()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name = scrapy.Field()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    order = scrapy.Field()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title = scrapy.Field()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    content = scrapy.Field()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可见, 这里定义了几个参数, 分别是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: 小说名&lt;/li&gt;
&lt;li&gt;order: 章节序号&lt;/li&gt;
&lt;li&gt;title: 章节标题&lt;/li&gt;
&lt;li&gt;content: 章节内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时再回看 &lt;code&gt;parse_content()&lt;/code&gt; 函数, 函数实例化了一个 BiqugeDlItem 类, 并将小说名, 章节序号, 章节标题以及爬取得到的章节内容存入了 item 中, 最终将存有单章节数据的 item 对象返回.&lt;/p&gt;
&lt;h4 id=&#34;pipelinespy&#34;&gt;pipelines.py&lt;/h4&gt;
&lt;p&gt;打开 pipelines.py, 定义一个 &lt;code&gt;BiqugeDlPipeline&lt;/code&gt; 类, 在类中重写 &lt;code&gt;open_spider(self, spider)&lt;/code&gt;, &lt;code&gt;process_item(self, item, spider)&lt;/code&gt; 以及 &lt;code&gt;close_spider(self, spider)&lt;/code&gt; 函数, 根据文档介绍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;open_spider(self, spider)&lt;/code&gt; 函数在爬虫启动时被调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;process_item(self, item, spider)&lt;/code&gt; 函数处理每一个返回的 item 对象&lt;/li&gt;
&lt;li&gt;&lt;code&gt;close_spider(self, spider)&lt;/code&gt; 函数在爬虫运行结束后调用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合以上特点, 我们可以在 pipielines.py 中实现对包含小说名, 章节序号, 章节标题, 章节内容的 item 的处理, 代码如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;BiqugeDlPipeline&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;open_spider&lt;/span&gt;(self, spider):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self.items = []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;process_item&lt;/span&gt;(self, item, spider):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self.items.append(item)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;close_spider&lt;/span&gt;(self, spider):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self.items.sort(key=&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;lambda&lt;/span&gt; i: i[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#8b008b&#34;&gt;in&lt;/span&gt; self.items:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#228b22&#34;&gt;# print(item[&amp;#39;title&amp;#39;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;downloads/&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;.txt&amp;#39;&lt;/span&gt;.format(item[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]), &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, encoding=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;as&lt;/span&gt; f:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                f.write(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&lt;/span&gt;.format(item[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; content &lt;span style=&#34;color:#8b008b&#34;&gt;in&lt;/span&gt; item[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    f.write(content.strip())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;open_spider()&lt;/code&gt; 中, 先定义一个空列表, 用于存储各个 item, 在 &lt;code&gt;process_item()&lt;/code&gt; 中, 将传入的 item 添加至 items 列表中, 在 &lt;code&gt;close_spider()&lt;/code&gt; 中, 对 items 列表进行排序操作, 然后将列表中内容写入最终文件, 实现了小说的按序存储. 至此, 整个爬取流程结束.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;运行爬虫&#34;&gt;运行爬虫&lt;/h2&gt;
&lt;p&gt;调试完成后, 在命令行启动爬虫, 测试爬取效果:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ scrapy crawl fiction_spider -a &lt;span style=&#34;color:#00688b&#34;&gt;url&lt;/span&gt;=https://www.biduoxs.com/biquge/79_79244/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;Pasted_image_20220525175633.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;由于疫情管控在家荒废了一段时间, 不过好在还算有一点残存的自制力, 努力学习了一点东西, 这篇博客应该算是手敲的最长的一篇了, 虽然花的时间长了一点, 但是总归是学到了一些, 特别是结合源码和文档来边总结边学习, 能够领会到一些新知识. 这是对着例程敲代码所比较难学到的.&lt;/p&gt;
- https://cgcel.github.io/posts/2022/05/17/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/scrapy%E5%88%9D%E4%B8%8A%E6%89%8B-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E8%AE%B0%E5%BD%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>一加8T刷Nameless AOSP记录</title>
        <link>https://cgcel.github.io/posts/2022/04/13/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Wed, 13 Apr 2022 16:32:51 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2022/04/13/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2022/04/13/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/ -&lt;h2 id=&#34;开头&#34;&gt;开头&lt;/h2&gt;
&lt;p&gt;之前给8T刷了 Derpfest, 也是基于A12 AOSP的一个ROM, 但是开发者在群里说已经不再维护, 前几天休息在家无聊逛了一下xda, 发现这个包点击量挺高, 于是决定给8T换一个ROM.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;准备&#34;&gt;准备&lt;/h2&gt;
&lt;p&gt;翻看 xda 的 ROM 发布&lt;a href=&#34;https://forum.xda-developers.com/t/rom-official-oos-12-cam-oneplus-8t-9r-12-1-0_r4-nameless-aosp-2022-04-13.4403295/&#34;&gt;帖子&lt;/a&gt;, 刷入步骤挺简单, 没有什么花里胡哨的, 把包下好之后就可以直接开整, 因为我的机已经解锁了, 也省去了很多繁琐的步骤.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Download recovery.img in download link
Reboot phone to bootloader
Open any terminal like cmd etc, enter &amp;ldquo;fastboot flash recovery recovery.img&amp;rdquo;
Reboot phone to recovery and enter sideload mode
Enter &amp;ldquo;adb sideload xxx&amp;rdquo; (xxx means the filename of rom zip you downloaded)
Do factory reset in recovery (Mandatory for first time flash)
Reboot
You can also use rom installer to flash the way you did before.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For root:&lt;/em&gt;
&lt;em&gt;Download Magisk apk
Rename it to xxx.zip
Reboot to recovery and enter sideload mode
Enter &amp;ldquo;adb sideload xxx.zip&amp;rdquo; (xxx means magisk file name)
You can also patch boot.img and flash via fastboot.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;步骤&#34;&gt;步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;下载 &lt;code&gt;ROM.zip&lt;/code&gt; 以及 &lt;code&gt;recovery.img&lt;/code&gt;, 考虑到后续的 #root 操作, 还下载了最新的 &lt;code&gt;Magisk-v24.3&lt;/code&gt;.&lt;/strong&gt;
&lt;img src=&#34;Snipaste_2022-04-17_21-59-55.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重启至 bootloader 并开始刷机.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb reboot bootloader
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot flash recovery recovery.img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot reboot recovery
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 recovery 中点击 adb sideload, 然后进行以下操作:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb sideload ROM.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完成后, 重启进入系统.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-04-11_16-51-28.png&#34; alt=&#34;&#34;&gt;
3. &lt;strong&gt;(Optional) Root 操作:&lt;/strong&gt; 开机状态下, 通过 adb 指令进入 recovery 并打开 adb sideload, 然后进行以下操作:
&lt;code&gt;shell adb devices adb sideload Magisk.img &lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;刷写完毕后, 重启进入系统, 安装 magisk.apk 即可查看 root 状态.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-04-11_17-26-32.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;截图&#34;&gt;截图&lt;/h2&gt;
&lt;p&gt;重启进入系统, 几天使用体验下来还比较稳定, 当然也可能是现在只能来当作游戏机的原因, Magisk 模块也没有刷, app 里的模块商店没有内容, 我有一段时间没刷机了, 不知道是因为什么, 从什么时候开始的.&lt;/p&gt;
&lt;p&gt;摆弄了一下 Android 12 的小组件, 感觉还是挺好看的, 就是浪费屏幕空间.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1b7136027d50ddfd38f3dd86427c86c.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;09e9312993fd33afce9add0766efb3c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
- https://cgcel.github.io/posts/2022/04/13/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/%E4%B8%80%E5%8A%A08t%E5%88%B7nameless-aosp%E8%AE%B0%E5%BD%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>树莓派4安装nextcloud记录 (非docker安装法)</title>
        <link>https://cgcel.github.io/posts/2022/03/21/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Mon, 21 Mar 2022 21:54:49 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2022/03/21/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2022/03/21/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/ -&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;由于前一段时间换了 iPhone, 导致原本把音乐文件存在本地听歌的白嫖习惯中断了, 使用 iTunes 实在是不方便 (需要固定一台 pc 管理本地音乐文件), 加之不想用 iCloud 服务, 因此我在 tg 上用缓存听了一个多月的歌&amp;hellip;&lt;/p&gt;
&lt;p&gt;树莓派放在东莞家里, 一直跑着 qbittorrent-nox 以及 frps 服务, 这两个都是日常使用很频繁的服务, 树莓派跑起来也是绰绰有余. 最近由于东莞疫情, 已经很久没有回去, 于是正好在休息日折腾一下很久没管的树莓派, 给树莓派装上 nextcloud, 用来当作自己的网盘, 把音乐文件存入, 方便手机同步.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安装过程&#34;&gt;安装过程&lt;/h2&gt;
&lt;h3 id=&#34;安装apache2&#34;&gt;安装apache2&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 1.安装命令  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install apache2  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 2.启动apache2  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start apache2  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 3.设置apache2开机自启  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl &lt;span style=&#34;color:#658b00&#34;&gt;enable&lt;/span&gt; apache2  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 附上其他命令  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 查看运行状态  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status apache2  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 重启  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart apache2  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 停止  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop apache2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装php&#34;&gt;安装php&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 1.安装php  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install php libapache2-mod-php -y  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 2.安装其他组件  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install php-fpm php-cli php-json php-curl php-imap php-gd php-mysql php-xml php-zip php-intl php-imagick php-mbstring -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装mariadb&#34;&gt;安装mariadb&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 1.安装  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install mariadb-server -y  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 2.开启远程登陆权限  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 2.1 切换目录  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d /etc/mysql/mariadb.conf.d  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 2.2 找到修改权限的文件  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -rn &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;skip-networking&amp;#34;&lt;/span&gt; *  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 显示如下：在50-server.cnf文件的第26行  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;50-server.cnf:26:# Instead of skip-networking the default is now to listen only on  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 2.3 编辑文件，注释掉  bind-address = 127.0.0.1  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano 50-server.cnf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建数据库用户以及添加数据库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 直接回车 不需要输入密码  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql -uroot -p  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# account可替换成自定义的用户名，password可替换成自定义的密码  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;create database nextcloud;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE USER &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;account&amp;#39;&lt;/span&gt;@&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;%&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GRANT ALL PRIVILEGES ON *.* TO &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;oc_admin&amp;#39;&lt;/span&gt;@&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;%&amp;#39;&lt;/span&gt; WITH GRANT OPTION;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flush privileges;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE USER &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;account&amp;#39;&lt;/span&gt;@&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GRANT ALL PRIVILEGES ON *.* TO &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;account&amp;#39;&lt;/span&gt;@&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; WITH GRANT OPTION;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flush privileges;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装nextcloud&#34;&gt;安装nextcloud&lt;/h3&gt;
&lt;p&gt;从&lt;a href=&#34;https://nextcloud.com/install/#instructions-server&#34;&gt;官网&lt;/a&gt;下载 .tar.bz2 的压缩包&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-03-22_12-55-24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载完成后, 需要上传到树莓派的 &lt;code&gt;/var/www/html/&lt;/code&gt; 目录下. 然后执行以下命令.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 1.解压文件  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar jxf nextcloud-21.0.0.tar.bz2  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 2.添加data目录和授权  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chown -R root:root nextcloud  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 3.进入nextcloud文件夹  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#658b00&#34;&gt;cd&lt;/span&gt; nextcloud  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 4.创建数据文件夹  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir data  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 5.添加权限和授权  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chown -R www-data:www-data data config apps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(可选) 如果是在非root权限下操作, 可以先上传至树莓派, 剪切到 &lt;code&gt;/var/www/html/&lt;/code&gt; 目录后再进行解压.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;初始化nextcloud&#34;&gt;初始化nextcloud&lt;/h2&gt;
&lt;h3 id=&#34;准备&#34;&gt;准备&lt;/h3&gt;
&lt;p&gt;初始化前, 由于我的树莓派开启了ufw, 所以先开启防火墙端口白名单:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ufw allow 80/tcp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于我的树莓派挂载一个1TB的移动硬盘, 为了充分利用以及避免后续操作, 先设置好硬盘开机自动挂载. 首先在命令行中输入:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;Snipaste_2022-03-22_14-51-29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到, 图中我已经对1TB的移动硬盘 &lt;code&gt;/dev/sda1&lt;/code&gt; 进行了挂载, 挂载目录为事先创建好的目录 &lt;code&gt;/mnt/usb-1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;接着, 命令行输入以下指令, 查看移动硬盘格式:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo fdisk -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;Snipaste_2022-03-22_14-51-47.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看出, 我的移动硬盘为NTFS格式, 接下来寻找或者创建一个自己想要挂载的目录, 然后编辑 &lt;code&gt;/etc/fstab&lt;/code&gt;, 在文件中添加以下内容:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/sda1 /mnt/usb-1 ntfs defaults &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存退出后, 命令行输入 &lt;code&gt;sudo mount -a&lt;/code&gt;, 挂载后, 输入 &lt;code&gt;df -a&lt;/code&gt; 查看是否成功挂载.&lt;/p&gt;
&lt;h3 id=&#34;可选-通过域名访问&#34;&gt;(可选) 通过域名访问&lt;/h3&gt;
&lt;p&gt;由于之前找电信要了公网ip, 树莓派动态绑定了阿里云域名, 这里通过添加路由器虚拟服务器, 如下图所示, 外部端口选择自己想要映射的端口, 内部服务器IP填写树莓派在家中局域网的IP, 启用后便可在公网通过 &lt;code&gt;域名:外部端口/nextcloud&lt;/code&gt; 的方式访问nextcloud页面.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-03-22_15-23-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;初始化&#34;&gt;初始化&lt;/h3&gt;
&lt;p&gt;在完成了上述准备后, 便可以进行nextcloud的初始化. 在局域网中访问 &lt;code&gt;树莓派IP:80/nextcloud&lt;/code&gt; 或在公网中访问 &lt;code&gt;域名:外部端口/nextcloud&lt;/code&gt; 即可.&lt;/p&gt;
&lt;p&gt;在初始化页面中, 根据实际情况填写相关输入框:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-03-22_15-29-28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ntfs挂载的一些问题&#34;&gt;NTFS挂载的一些问题&lt;/h3&gt;
&lt;p&gt;由于挂载格式是NTFS, 导致初始化完成后, 页面显示 &lt;code&gt;您的数据目录可被其他用户读取, 请更改权限为0770以避免其他用户查看目录&lt;/code&gt;, 经查询, 可以修改nextcloud目录下的 &lt;code&gt;config/config.php&lt;/code&gt; 来解决, 按照我的安装目录, 定位至 &lt;code&gt;/var/www/html/nextcloud/config&lt;/code&gt; , 编辑 &lt;code&gt;config.php&lt;/code&gt;, 在文件中添加以下内容:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;check_data_directory_permissions&amp;#39;&lt;/span&gt; =&amp;gt; false,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;保存关闭后, 刷新nextcloud页面, 问题解决.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;
&lt;h3 id=&#34;上传音乐文件&#34;&gt;上传音乐文件&lt;/h3&gt;
&lt;p&gt;在PC端, 将本地音乐文件上传至nextcloud.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-03-21_22-22-41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;并将存放音乐的nextcloud文件夹添加至本地.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2022-03-22_15-45-43.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;移动端使用&#34;&gt;移动端使用&lt;/h3&gt;
&lt;p&gt;在手机端下载evermusic, 通过webdev连接nextcloud, 注意url一栏填写: &lt;code&gt;xxx:port/nextcloud/remote.php/webdev&lt;/code&gt;, 其他的按照个人设置填写.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;30ae133bc95aa691857e78e96f69e0a.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;连接上nextcloud后, 即可随心所欲听歌, 也可以选择将歌曲下载至本机.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;e565066562eb0719ab02d2caa4e10c6.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;pc端&#34;&gt;PC端&lt;/h3&gt;
&lt;p&gt;在设置同步的文件夹中, 使用 &lt;code&gt;PotPlayer&lt;/code&gt; 打开所有文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220328211033.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结尾&#34;&gt;结尾&lt;/h2&gt;
&lt;p&gt;经过一番折腾, 终于比较优雅地实现了把音乐文件存到iPhone的功能, 坚持恢复这种方式来听歌的起因也很简单, 那就是网易云时不时就下架我歌单的歌, 因此戒掉网易云, QQ也是理所当然的.&lt;/p&gt;
&lt;h3 id=&#34;参考内容&#34;&gt;参考内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cynosure.online/2021/08/16/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BANextcloud%E7%A7%81%E6%9C%89%E4%BA%91&#34;&gt;https://cynosure.online/2021/08/16/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BANextcloud%E7%A7%81%E6%9C%89%E4%BA%91&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://its401.com/article/jdyanghang/102828553&#34;&gt;https://its401.com/article/jdyanghang/102828553&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://cgcel.github.io/posts/2022/03/21/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%AE%89%E8%A3%85nextcloud%E8%AE%B0%E5%BD%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>一加8T全量包升级并保留ROOT</title>
        <link>https://cgcel.github.io/posts/2021/05/22/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/</link>
        <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://cgcel.github.io/posts/2021/05/22/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2021/05/22/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/ -&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在试用了一天多 ColorOS 之后, 鉴于其后台管理过于严格, 我又趁午休时间刷回了 OOS, 之前已经有了用 TWRP 保留 root 的全量包更新经验和文章, 本篇只想快速记录一下.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;9008 线刷包 (OOS)&lt;/li&gt;
&lt;li&gt;payload_dumper&lt;/li&gt;
&lt;li&gt;Magisk-v23.0.apk&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;步骤&#34;&gt;步骤&lt;/h2&gt;
&lt;h3 id=&#34;步骤一-刷回-oos&#34;&gt;步骤一: 刷回 OOS&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;进入 &lt;code&gt;开发者选项&lt;/code&gt;, 勾选 &lt;code&gt;允许 OEM 解锁&lt;/code&gt;, &lt;code&gt;开启 USB 调试&lt;/code&gt;, 然后关机静置.&lt;/li&gt;
&lt;li&gt;同时按住 &lt;code&gt;音量+&lt;/code&gt; 和 &lt;code&gt;音量-&lt;/code&gt;, 然后用 USB 线连接电脑, 开启 9008 线刷, 刷机完毕后重启进入系统.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;步骤二-解锁-oos-并-root&#34;&gt;步骤二: 解锁 OOS 并 ROOT&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入 &lt;code&gt;开发者选项&lt;/code&gt;, 勾选 &lt;code&gt;允许 OEM 解锁&lt;/code&gt;, &lt;code&gt;开启 USB 调试&lt;/code&gt;, 然后输入以下指令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb reboot bootloader
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot oem unlock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 &amp;ldquo;音量键&amp;rdquo; 和 &amp;ldquo;电源键&amp;rdquo; 确定解锁手机, 然后完成初始化进入系统.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;root步骤参考上一篇文章, 此处省略.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;步骤三-更新系统&#34;&gt;步骤三: 更新系统&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载要更新的全量包, 复制多一份至电脑或手机 (取决你从哪一端下载)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screenshot_20210520-134041.jpg&#34; alt=&#34;下载全量包&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在电脑端, 使用 &lt;code&gt;payload_dumper&lt;/code&gt; 提取 &lt;code&gt;OOS.zip&lt;/code&gt; 的 &lt;code&gt;boot.img&lt;/code&gt;, 并将其复制到手机存储中.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2021-05-20_13-42-36.png&#34; alt=&#34;提取 boot.img&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装并打开 Magisk, 选择 &amp;ldquo;安装&amp;rdquo;, &amp;ldquo;选择并修补一个文件&amp;rdquo;, 选择置入手机的 &amp;ldquo;boot.img&amp;rdquo;, 最后点 &amp;ldquo;开始&amp;rdquo;, Magisk 会生成一个类似于 &lt;code&gt;magisk_patched-xxx.img&lt;/code&gt; 的文件, 将其复制一份到电脑:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screenshot_20210520-134324.jpg&#34; alt=&#34;magisk中点击安装&#34;&gt;
&lt;img src=&#34;Screenshot_20210520-134332.jpg&#34; alt=&#34;magisk中选择修补文件&#34;&gt;
&lt;img src=&#34;Snipaste_2021-05-20_13-45-24.png&#34; alt=&#34;复制至电脑&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装系统更新, 安装完毕后重启进入系统桌面:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screenshot_20210520-134100.jpg&#34; alt=&#34;安装进度截图&#34;&gt;&lt;/p&gt;
&lt;p&gt;检查 root 权限, 发现此时是没有 root 的:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screenshot_20210520-134925.jpg&#34; alt=&#34;检查 root 权限&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;刷入 &lt;code&gt;magisk_patched-xxx.img&lt;/code&gt;, 根据以下指令完成:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb reboot bootloader
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot flash boot magisk_patched-xxx.img
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;Snipaste_2021-05-20_13-50-15.png&#34; alt=&#34;刷入截图&#34;&gt;&lt;/p&gt;
&lt;p&gt;刷入完成后, 重启进入系统, 打开 &amp;ldquo;设置&amp;rdquo; 以及 &amp;ldquo;Magisk Manager&amp;rdquo; 查看系统信息以及 root 情况:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screenshot_20210520-135137.jpg&#34; alt=&#34;查看系统情况&#34;&gt;
&lt;img src=&#34;Screenshot_20210520-135100.jpg&#34; alt=&#34;查看 root 情况&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结尾&#34;&gt;结尾&lt;/h2&gt;
&lt;p&gt;至此, 成功尝试了 OOS 的全量包更新并保持 ROOT 权限, 之前是依靠 TWRP 以及 Magisk 中的模块自动化完成的, 这次全部自己操作, 还是积累到一点经验的.&lt;/p&gt;
- https://cgcel.github.io/posts/2021/05/22/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/%E4%B8%80%E5%8A%A08t%E5%85%A8%E9%87%8F%E5%8C%85%E5%8D%87%E7%BA%A7%E5%B9%B6%E4%BF%9D%E7%95%99root/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>从OOS到LOS -- 一加8T的刷机记录</title>
        <link>https://cgcel.github.io/posts/2021/05/17/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Mon, 17 May 2021 13:45:02 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2021/05/17/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2021/05/17/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/ -&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;距离一加 8T 的发布已经过去了大半年, 据说一加 8T 的 ColorOS 会在6月底释出, 大家都说大氢亡了🥴, 但是我不用氢啊🤡, 加上氧最近也用的有些腻了, 正好前一段时间关注到 8T 的 &lt;a href=&#34;https://forum.xda-developers.com/c/oneplus-8t.11579/&#34;&gt;xda 论坛&lt;/a&gt; 挺活跃的, 已经有不少的 ROM 可以刷了:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2021-05-17_23-02-35.jpg&#34; alt=&#34;oneplus 8t xda forum&#34;&gt;&lt;/p&gt;
&lt;p&gt;于是我就打算利用空闲时间刷一刷手里的 8T 解解馋, 玩累了正好回 ColorOS (如果一加不鸽的话&amp;hellip;)&lt;/p&gt;
&lt;p&gt;本篇将分为两大部分来记录, 分别是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OOS 刷 LOS 的记录&lt;/li&gt;
&lt;li&gt;LOS 刷回 OOS 并 root 的记录&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;oos-刷-los&#34;&gt;OOS 刷 LOS&lt;/h2&gt;
&lt;h3 id=&#34;准备&#34;&gt;准备&lt;/h3&gt;
&lt;p&gt;在准备刷机前, 我们需要 &lt;strong&gt;备份好数据&lt;/strong&gt;, 并安装或下载好以下内容 (下载包以本篇博客日期为准, 如参考则需尽量下载最新包):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adb (基本操作了, 没有adb就无法通过指令控制手机)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/t/op8t-oos-kb05aa-ba-da-unbrick-tool-to-restore-your-device-to-oxygenos.4180837/unread&#34;&gt;9008救砖包&lt;/a&gt; (随时准备好救砖)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://download.lineageos.org/kebab&#34;&gt;lineage-18.1-20210513-nightly-kebab-signed.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://download.lineageos.org/kebab&#34;&gt;lineage-18.1-20210513-recovery-kebab.img&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.androidfilehost.com/?fid=2188818919693768129&#34;&gt;copy-partitions-20210323_1922.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.lineageos.org/gapps.html&#34;&gt;GAPPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk/releases&#34;&gt;Magisk-v23.0.apk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;具体步骤&#34;&gt;具体步骤&lt;/h3&gt;
&lt;p&gt;详细刷机步骤参考 &lt;a href=&#34;https://wiki.lineageos.org/devices/kebab/install&#34;&gt;官方文档&lt;/a&gt; , 下面我将按照具体指令来总结, 这样比较明了, 不用看详细的文字解释:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入 &lt;code&gt;开发者选项&lt;/code&gt; 并开启 &lt;code&gt;OEM 解锁&lt;/code&gt; 以及 &lt;code&gt;USB调试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检测 adb 连接情况后进入 bootloader, 然后解锁手机:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb reboot bootloader
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot oem unlock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过音量键和电源键, 将手机解锁, 手机将清除所有数据, 完成初始化后, 继续进入 &lt;code&gt;开发者选项&lt;/code&gt; 并开启 &lt;code&gt;OEM 解锁&lt;/code&gt; 以及 &lt;code&gt;USB调试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重启至 bootloader, 刷入 recovery:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb reboot bootloader
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot devices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot flash recovery lineage-18.1-20210513-recovery-kebab.img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastboot reboot recovery
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 recovery 中, 将 A分区数据复制到 B分区, 避免B分区固件太久导致黑砖, 点击 &amp;ldquo;Apply Update&amp;rdquo;, 然后点击 &amp;ldquo;Apply from ADB&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb sideload copy-partitions-20210323_1922.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;签名验证失败的话, 点击 &amp;ldquo;Yes&amp;rdquo; 继续刷入即可.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;点击 &amp;ldquo;Advanced&amp;rdquo;, 然后点击 &amp;ldquo;Reboot to recovery&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 recovery 主界面 &lt;strong&gt;点击 &amp;ldquo;Factory Reset&amp;rdquo;&lt;/strong&gt; 双清 (不能漏这一步, 某则脏刷将导致各种问题, 我第一次刷忘记双清, 直接 boot loop 加定位失灵), 然后点击 &amp;ldquo;Apply Update&amp;rdquo;, 点击 &amp;ldquo;Apply from ADB&amp;rdquo; 进入 adb sideload 模式刷入 LineageOS:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb sideload lineage-18.1-20210513-nightly-kebab-signed.zip 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;签名验证失败的话, 点击 &amp;ldquo;Yes&amp;rdquo; 继续刷入即可.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(可选操作): 刷入额外的包, 如 GAPPS, Magisk等:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果要刷 GAPPS, 需要在重启进入系统前将其刷入, 其他包则可以在通过系统初始化后重启至 recovery 再刷.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面将以本次刷机为例, 记录刷入 &lt;code&gt;GAPPS&lt;/code&gt; 和 &lt;code&gt;Magisk&lt;/code&gt; 的过程:&lt;/p&gt;
&lt;p&gt;重启至 recovery, 然后进入 sideload 模式:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb sideload MindTheGapps-11.0.0-arm64-20210412_124247.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 recovery 主菜单点击 &amp;ldquo;Reboot system now&amp;rdquo;, 即可开机进入系统, 完成初始化后检查谷歌全家桶能否正常运行, 无误后继续以下步骤:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb install Magisk-v23.0.apk
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb reboot recovery
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启至 recovery 后, 进入 sideload 模式, 同时将电脑中的 &lt;code&gt;Magisk-v23.0.apk&lt;/code&gt; 复制一份, 改名为 &lt;code&gt;Magisk-v23.0.zip&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb sideload Magisk-v23.0.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 recovery 主菜单点击 &amp;ldquo;Reboot system now&amp;rdquo;, 即可开机进入系统.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;发现的问题&#34;&gt;发现的问题&lt;/h3&gt;
&lt;p&gt;刷 LOS 的过程中发现了两个问题, 问题和解决方法如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;定位不正常&lt;/p&gt;
&lt;p&gt;第一次刷入时忘记双清, 开机直接 boot loop, 解决后进入系统, 第二天上班时差点钉钉打卡无法定位&amp;hellip;&lt;/p&gt;
&lt;p&gt;解决方法: 刷入 LOS 前双清, 切忌 dirty flash.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移动网络网速不正常&lt;/p&gt;
&lt;p&gt;第二次刷入时一切正常, 但切换至移动网络时网速只有 200+k/s, 明显不是5G该有的网速, 后到lineage的 reddit 论坛中发现有人有 &lt;a href=&#34;https://www.reddit.com/r/LineageOS/comments/nd7qpt/no_mobile_data/?utm_source=share&amp;amp;utm_medium=mweb&#34;&gt;同样的情况&lt;/a&gt;, 只需根据运营商修改 APN 即可.
刷回 OOS 后, 我进入设置对默认 APN 进行了截图 (此处以联通为例).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;photo_2021-05-17_19-14-27.jpg&#34; alt=&#34;APN config&#34;&gt;&lt;/p&gt;
&lt;p&gt;解决方法: 刷入 LOS 后进入设置, 按照截图修改参数即可.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;截图&#34;&gt;截图&lt;/h3&gt;
&lt;p&gt;正常使用后的一些截图如下:&lt;/p&gt;
&lt;p&gt;修改 APN 后的 speedtest:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2021-05-18_00-31-54.jpg&#34; alt=&#34;speedtest&#34;&gt;&lt;/p&gt;
&lt;p&gt;更新界面:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;photo_2021-05-17_22-27-23.jpg&#34; alt=&#34;更新界面&#34;&gt;&lt;/p&gt;
&lt;p&gt;Magisk 界面:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;photo_2021-05-17_22-27-24.jpg&#34; alt=&#34;Magisk 界面&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;los-回-oos-并-root&#34;&gt;LOS 回 OOS 并 ROOT&lt;/h2&gt;
&lt;h3 id=&#34;准备-1&#34;&gt;准备&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;adb (基本操作了, 没有adb就无法通过指令控制手机)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/t/op8t-oos-kb05aa-ba-da-unbrick-tool-to-restore-your-device-to-oxygenos.4180837/unread&#34;&gt;9008救砖包&lt;/a&gt; (随时准备好救砖)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk/releases&#34;&gt;Magisk-v23.0.apk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/t/oneplus-8t-rom-ota-oxygen-os-repo-of-oxygen-os-builds.4193183/&#34;&gt;OOS全量包&lt;/a&gt; (这里用的是 OOS Open Beta 4)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://androidfilehost.com/?fid=818070582850510260&#34;&gt;Payload Dumper for Win&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;具体步骤-1&#34;&gt;具体步骤&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;以下步骤以 LOS 刷至 OOS 为例, 刷机前记得 &lt;strong&gt;做好备份&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;参考视频: &lt;a href=&#34;https://www.youtube.com/watch?v=zKd_mO7f1eM&#34;&gt;https://www.youtube.com/watch?v=zKd_mO7f1eM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;关机, 静置手机待其完全关闭, 电脑解压并打开下载好的 救砖包, 打开 &lt;code&gt;MsmDownloadTool V4.0.exe&lt;/code&gt;, 选择 &lt;code&gt;Other&lt;/code&gt;并下一步, target 项选择 &lt;code&gt;O2&lt;/code&gt;, 表示刷入 OOS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同时按下手机的 &lt;code&gt;音量+&lt;/code&gt; 和 &lt;code&gt;音量-&lt;/code&gt;, 插入 USB 线与电脑连接, 待出现 COM 口后, 点击 &lt;code&gt;start&lt;/code&gt;, 看到开始加载进度条后方可松开音量键, 等待刷机完毕后, 手机将清除所有数据并自动重启.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成初始化后进入系统, 打开 &lt;code&gt;开发者选项&lt;/code&gt; 并勾选 &lt;code&gt;OEM 解锁&lt;/code&gt; 以及 &lt;code&gt;USB 调试&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解锁手机:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;adb decices
adb reboot bootloader
fastboot devices
fastboot oem unlock
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过音量键和电源键确认解锁手机, 然后完成初始化进入系统.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将下载好的 OOS Open Beta 4 全量包放入手机根目录, 进入设置, 系统升级, 选择 &lt;code&gt;从本地更新&lt;/code&gt;, 然后选择根目录中的全量包进行 full update, 安装完毕后重启手机.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在电脑端, 将下载好的 OOS 全量包中的 &lt;code&gt;payload.bin&lt;/code&gt; 置入 &amp;ldquo;/payload_dumper-win64&amp;rdquo; 的 &amp;ldquo;/input&amp;rdquo; 文件夹中, 运行 &lt;code&gt;payload_dumper.exe&lt;/code&gt;, 运行完毕后, 在 &amp;ldquo;/output&amp;rdquo; 中找到 &lt;code&gt;boot.img&lt;/code&gt; 并复制到手机目录中, 如 &amp;ldquo;/Download&amp;rdquo; 中.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装并打开 &amp;ldquo;Magisk Manager&amp;rdquo;, 在首页点击 &amp;ldquo;安装&amp;rdquo;, 选择 &amp;ldquo;选择并修补一个文件&amp;rdquo;, 选择 &amp;ldquo;/Download/boot.img&amp;rdquo; 后点击 &amp;ldquo;开始&amp;rdquo;, Magisk Manager 将生成一个命名类似 &lt;code&gt;magisk_patch.img&lt;/code&gt; 的文件在 &amp;ldquo;/Download&amp;rdquo; 中, 将其复制进电脑.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将手机连接至电脑, 输入以下指令:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;adb devices
adb reboot bootloader
fastboot devices
fastboot flash boot magisk_patch.img
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;刷入完毕后重启至系统, 打开 Magisk Manager 检查 root 状态.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2021-05-18_16-17-01.jpg&#34; alt=&#34;指令一览&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结尾&#34;&gt;结尾&lt;/h2&gt;
&lt;p&gt;Root 之后, 又可以玩回很多以前的东西了, 比如把字体改成 Ubuntu 格式, 启用黑域, Swift Backup, Quick Switch等等, 倒是最近的 Xposed 框架又有新的 &lt;code&gt;LSPosed&lt;/code&gt;, 简称 &amp;ldquo;LSP&amp;rdquo;, 是个轻量级的框架, 模块商店的模块还很少, 但是装个 WX 模块还是绰绰有余的.&lt;/p&gt;
&lt;p&gt;再说到动画方面, LOS 的动画流畅度简直吊打 OOS 的, 就比如点开微信信息推送和横屏返回桌面的动画, 一经比较便高下立判, OOS 小修小补这么久, 这个导航栏手势改得真是没眼看&amp;hellip;&lt;/p&gt;
&lt;p&gt;当然, 稳定性方面 OOS 肯定是 LOS 比不了的, 毕竟 LOS 只是一个个人维护的第三方 ROM, 没记错的话开发者 Luk1337 已经从一加6一路维护到一加8T了, 不愧是大佬👍&lt;/p&gt;
- https://cgcel.github.io/posts/2021/05/17/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/%E4%BB%8Eoos%E5%88%B0los--%E4%B8%80%E5%8A%A08t%E7%9A%84%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>我的 ZeroTier Network 管理 bot</title>
        <link>https://cgcel.github.io/posts/2021/05/13/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/</link>
        <pubDate>Thu, 13 May 2021 21:51:24 +0800</pubDate>
        
        <guid>https://cgcel.github.io/posts/2021/05/13/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/</guid>
        <description>烂杯的博客 https://cgcel.github.io/posts/2021/05/13/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/ -&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;ZeroTier 我从去年开始第一次使用, 用来给家里的树莓派做内网穿透, 不过中间因为3B当做个小服务器没什么好玩的就中断了.&lt;/p&gt;
&lt;p&gt;去年年底双十一从闲鱼如了一台 4G RAM 的4B (有点后悔没耐心等 8G 版本), 刷了 RaspiOS 之后就拿来跑PT站的签到脚本和当做下载机使用, 顺便安装了 ZeroTier One, 加入我的 ZeroTier Network, 如此一来在外也能较为轻松地访问到我的 pi.&lt;/p&gt;
&lt;p&gt;但是由于 ZeroTier 的官网在国内访问较慢, 每次需要通过新加入成员或者管理成员都要花一点时间登录官网并管理, 一开始还不觉得麻烦, 后来加入成员越来越多, 也邀请朋友一起加入, 这样管理起来就比较麻烦. 恰巧此时从 ZeroTier 官网上看到他们有官方的 API 可供用户调用, 于是我申请了 API Key, 短暂测试之后决定写一个 Telegram Bot 帮助监控以及管理我的 ZeroTier Network.&lt;/p&gt;
&lt;h2 id=&#34;api-调用测试&#34;&gt;API 调用测试&lt;/h2&gt;
&lt;p&gt;根据 &lt;a href=&#34;https://apidocs.zerotier.com/&#34;&gt;官方文档&lt;/a&gt; 说明, 使用 postman 进行 API 调用测试, 根据指示, 在 header 中按照格式加入 API Key 即可请求到数据, 如下图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Snipaste_2021-05-13_23-45-40.jpg&#34; alt=&#34;使用postman调用API&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;bot-设计&#34;&gt;Bot 设计&lt;/h2&gt;
&lt;p&gt;本 bot 使用 Telegram Bot 的第三方库 &lt;a href=&#34;https://github.com/eternnoir/pyTelegramBotAPI&#34;&gt;pyTelegramBotAPI&lt;/a&gt; 来实现, 代码部分主要包括两个部分:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bot 命令以及定时任务&lt;/li&gt;
&lt;li&gt;ZeroTier API 调用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;初期版本&#34;&gt;初期版本&lt;/h3&gt;
&lt;p&gt;初期的版本通过在 &lt;code&gt;config.yaml&lt;/code&gt; 文件中添加用户 ID 来添加管理员, 并通过私聊 bot 的方式来对 Network 进行管理. 这种交互方式在 只有一个管理员的时候还是挺方便的, 只需要直接与 bot 私聊发送指令, 开发到一大半的时候发现一个比较难实现的功能: 当有多个管理员管理的时候, bot 显示管理信息会比较困难 (需要在所有管理员对话框同步修改信息, 以显示是哪位管理员进行了此项操作).&lt;/p&gt;
&lt;h3 id=&#34;改进版本&#34;&gt;改进版本&lt;/h3&gt;
&lt;p&gt;与其说初期版本功能的实现比较绕, 不如说是设计之初就考虑的不周到, 本 bot 想要设计成一个允许多人管理的 bot, 就不能以私聊的方式交互, 而是应该将 bot 添加至群聊中, 让群管理员有权限进行管理, 如此一来逻辑便清晰许多了.&lt;/p&gt;
&lt;h2 id=&#34;bot-功能&#34;&gt;Bot 功能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Show networks info&lt;/li&gt;
&lt;li&gt;Show network members info&lt;/li&gt;
&lt;li&gt;Set member name (Admin only)&lt;/li&gt;
&lt;li&gt;Authorize new member (Admin only)&lt;/li&gt;
&lt;li&gt;Unauthorize member (Admin only)&lt;/li&gt;
&lt;li&gt;Delete member (Admin only)&lt;/li&gt;
&lt;li&gt;Set sub admin (Invite your friends to group chat, set as admin and manage the network with you)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;创建私人-zerotier-network-管理-bot-具体步骤&#34;&gt;创建私人 ZeroTier Network 管理 Bot 具体步骤&lt;/h2&gt;
&lt;h3 id=&#34;开始&#34;&gt;开始&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建你的 ZeroTier Web API Token:&lt;/p&gt;
&lt;p&gt;点击&lt;a href=&#34;https://my.zerotier.com/account&#34;&gt;链接&lt;/a&gt;创建 API Access Token.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建你的 Telegram Bot:&lt;/p&gt;
&lt;p&gt;发送指令给 @BotFather, 你可以复制以下内容发送至 @BotFather 以编辑你的 bot 指令:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;help - Show commands list.
show_network - Show your zerotier networks.
set_member_name - Set your member&amp;#39;s name by using this command.
auth_member - Authorize a member.
unauth_member - Unauthorize a member.
delete_member - Delete a member.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拷贝仓库至本地:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git clone https://github.com/koonchung/ZeroTierTelegramBot.git
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装依赖:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编辑 &lt;code&gt;config.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# Fill with your telegram bot token&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# Create your bot by sending commands to @BotFather in Telegram&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;bot_token&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;your_bot_token&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# Fill with your zerotier token&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# Get your own API Access Token at: https://my.zerotier.com/account&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;zerotier_token&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;your_zerotier_web_api_token&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# Fill with telegram id which you want to set as admin&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;admin_id&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;   &lt;/span&gt;- your_telegram_id&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# Fill with refresh seconds, used to check new members&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;refresh_seconds&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#b452cd&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行 Bot&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd ZeroTierTelegramBot
$ python3 zerotiertelegrambot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将 bot 邀请至自建群聊中, 发送 &lt;code&gt;/start@your_bot&lt;/code&gt; 至群聊, 然后即可开始管理你的ZeroTier Networks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后台运行&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本菜鸟使用tmux在后台挂起bot服务.&lt;/p&gt;
&lt;h3 id=&#34;运行截图&#34;&gt;运行截图&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;start&amp;amp;help&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;start&amp;amp;help.png&#34; alt=&#34;start&amp;amp;help&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;show_network&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;show_network.png&#34; alt=&#34;show_network&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;network_info&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;network_info.png&#34; alt=&#34;network_info&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;accept&amp;amp;setname&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;accept&amp;amp;setname.png&#34; alt=&#34;accept&amp;amp;setname&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;auth&amp;amp;setname&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;auth&amp;amp;setname.png&#34; alt=&#34;auth&amp;amp;setname&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;new_member&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new_member.png&#34; alt=&#34;new_member&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结尾&#34;&gt;结尾&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/koonchung/ZeroTierTelegramBot&#34;&gt;项目&lt;/a&gt;已发布在 GitHub, 欢迎提意见🤗&lt;/p&gt;
- https://cgcel.github.io/posts/2021/05/13/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/%E6%88%91%E7%9A%84-zerotier-network-%E7%AE%A1%E7%90%86-bot/ - This is a customized copyright.</description>
        </item>
    
    
  </channel>
</rss> 